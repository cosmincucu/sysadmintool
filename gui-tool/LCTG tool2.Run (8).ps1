#------------------------------------------------------------------------
# Source File Information (DO NOT MODIFY)
# Source ID: eb52d17a-ddc9-47a9-89d3-140b1e011cc1
# Source File: \\Mac\Google Drive\Projects\tool\LCTG tool2.psf
#------------------------------------------------------------------------

<#
    .NOTES
    --------------------------------------------------------------------------------
     Code generated by:  SAPIEN Technologies, Inc., PowerShell Studio 2016 v5.2.122
     Generated on:       6/4/2016 7:25 PM
     Generated by:        
     Organization:        
    --------------------------------------------------------------------------------
    .DESCRIPTION
        GUI script generated by PowerShell Studio 2016
#>
#----------------------------------------------
#region Application Functions
#----------------------------------------------

#endregion Application Functions

#----------------------------------------------
# Generated Form Function
#----------------------------------------------
function Call-LCTG_tool2_psf {

	#----------------------------------------------
	#region Import the Assemblies
	#----------------------------------------------
	[void][reflection.assembly]::Load('System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	#endregion Import Assemblies

	#----------------------------------------------
	#region Generated Form Objects
	#----------------------------------------------
	[System.Windows.Forms.Application]::EnableVisualStyles()
	$MainForm = New-Object 'System.Windows.Forms.Form'
	$SelectAllServers = New-Object 'System.Windows.Forms.CheckBox'
	$ServerFilter = New-Object 'System.Windows.Forms.TextBox'
	$progress_bar = New-Object 'System.Windows.Forms.RichTextBox'
	$tabcontrol1 = New-Object 'System.Windows.Forms.TabControl'
	$Local_Admin = New-Object 'System.Windows.Forms.TabPage'
	$usersdatagridview = New-Object 'System.Windows.Forms.DataGridView'
	$buttonShowAdmins = New-Object 'System.Windows.Forms.Button'
	$buttonRemoveAdmin = New-Object 'System.Windows.Forms.Button'
	$buttonAddAdmin = New-Object 'System.Windows.Forms.Button'
	$labelUsernameFromATrusted = New-Object 'System.Windows.Forms.Label'
	$Usernames = New-Object 'System.Windows.Forms.TextBox'
	$Copy_Files_tab = New-Object 'System.Windows.Forms.TabPage'
	$CopyFilesProgress = New-Object 'System.Windows.Forms.RichTextBox'
	$Copy_Files = New-Object 'System.Windows.Forms.Button'
	$labelDestination = New-Object 'System.Windows.Forms.Label'
	$labelSource = New-Object 'System.Windows.Forms.Label'
	$Destination = New-Object 'System.Windows.Forms.TextBox'
	$Source = New-Object 'System.Windows.Forms.TextBox'
	$IIS_websites = New-Object 'System.Windows.Forms.TabPage'
	$checkboxIISResetStagger = New-Object 'System.Windows.Forms.CheckBox'
	$buttonReleaseconfig = New-Object 'System.Windows.Forms.Button'
	$buttonStopAppPool = New-Object 'System.Windows.Forms.Button'
	$buttonStartAppPool = New-Object 'System.Windows.Forms.Button'
	$buttonViewAppPool = New-Object 'System.Windows.Forms.Button'
	$buttonWebConfig = New-Object 'System.Windows.Forms.Button'
	$buttonIISRESET = New-Object 'System.Windows.Forms.Button'
	$buttonHostsFile = New-Object 'System.Windows.Forms.Button'
	$buttonInLoad = New-Object 'System.Windows.Forms.Button'
	$buttonOffLoad = New-Object 'System.Windows.Forms.Button'
	$buttonStopWebsite = New-Object 'System.Windows.Forms.Button'
	$buttonStartWebsite = New-Object 'System.Windows.Forms.Button'
	$WebsitesDataGridView = New-Object 'System.Windows.Forms.DataGridView'
	$buttonViewWebsites = New-Object 'System.Windows.Forms.Button'
	$tabpage1 = New-Object 'System.Windows.Forms.TabPage'
	$buttonApplyFilter = New-Object 'System.Windows.Forms.Button'
	$buttonRestartServices = New-Object 'System.Windows.Forms.Button'
	$buttonStartServices = New-Object 'System.Windows.Forms.Button'
	$buttonStopServices = New-Object 'System.Windows.Forms.Button'
	$ServicesFilterTextBox = New-Object 'System.Windows.Forms.TextBox'
	$ServicesDataGridView = New-Object 'System.Windows.Forms.DataGridView'
	$buttonViewServices = New-Object 'System.Windows.Forms.Button'
	$Even_Viewer = New-Object 'System.Windows.Forms.TabPage'
	$PacketCapture = New-Object 'System.Windows.Forms.TabPage'
	$datagridviewShowPacketCaptures = New-Object 'System.Windows.Forms.DataGridView'
	$buttonStopPacketCapture = New-Object 'System.Windows.Forms.Button'
	$labelCaptureSizeMB = New-Object 'System.Windows.Forms.Label'
	$buttonStartPacketCapture = New-Object 'System.Windows.Forms.Button'
	$groupbox1 = New-Object 'System.Windows.Forms.GroupBox'
	$checkboxTraceConvertToPcap = New-Object 'System.Windows.Forms.CheckBox'
	$buttonShowPacketCapture = New-Object 'System.Windows.Forms.Button'
	$buttonGetPacketCapture = New-Object 'System.Windows.Forms.Button'
	$TextboxCaptureFolder = New-Object 'System.Windows.Forms.TextBox'
	$labelLocalFolder = New-Object 'System.Windows.Forms.Label'
	$groupbox2 = New-Object 'System.Windows.Forms.GroupBox'
	$buttonShowStatusPacketCapture = New-Object 'System.Windows.Forms.Button'
	$labelCaptureFilter = New-Object 'System.Windows.Forms.Label'
	$labelNetworkAdapter = New-Object 'System.Windows.Forms.Label'
	$textboxFilterPacketCapture1 = New-Object 'System.Windows.Forms.TextBox'
	$textboxNetworkAdapterPacketCapture = New-Object 'System.Windows.Forms.TextBox'
	$TextboxCaptureSize = New-Object 'System.Windows.Forms.TextBox'
	$ViewConnections = New-Object 'System.Windows.Forms.TabPage'
	$ServerList = New-Object 'System.Windows.Forms.CheckedListBox'
	$ToolTip = New-Object 'System.Windows.Forms.ToolTip'
	$Column1 = New-Object 'System.Windows.Forms.DataGridViewCheckBoxColumn'
	$Column2 = New-Object 'System.Windows.Forms.DataGridViewCheckBoxColumn'
	$Column3 = New-Object 'System.Windows.Forms.DataGridViewCheckBoxColumn'
	$ShowPacketCaptureCheckBox = New-Object 'System.Windows.Forms.DataGridViewCheckBoxColumn'
	$InitialFormWindowState = New-Object 'System.Windows.Forms.FormWindowState'
	#endregion Generated Form Objects

	#----------------------------------------------
	# User Generated Script
	#----------------------------------------------
	Import-Module ActiveDirectory
	New-PSDrive -PSProvider ActiveDirectory -Name domainDrive -Root "DC=rslc,DC=local" -Server "rslc.local"
	cd domainDrive:
	$adServerNames = Get-Content c:\servers.txt
	#$adServerNames = (Get-ADComputer -Filter * -Properties *  | where { $_.lastlogondate -gt ((get-date).AddDays(-30)) }).dnshostname | ? {$_}
	$MyToolsErrorLogFile = 'C:\errors.txt'
	$MyToolsLogFile = 'C:\log.txt'
	$DefaultTraceDir = "$env:windir\temp"
	function Check-Servers{
		param (
			[string[]]$Servers
		)
		[array]$ActiveServers = $null
		if ($Servers.count -eq 0)
		{
			$progress_bar.AppendText("[$(get-date)] You need to select at least one server ! $Servers `n")
		}
		else
		{
			foreach ($server in $Servers)
			{
				if (Test-Connection -ComputerName $server -Count 1)
				{
					$ActiveServers += $server
				}
				else
				{
					$progress_bar.AppendText("[$(get-date)] Server $server is not responding ! `n")
				}
				if ($activeServers.count -eq 0)
				{
					$progress_bar.AppendText("[$(get-date)] No server responding ! `n")
				}
				else
				{
					$ActiveServers
				}
			}
		}
	}
	function Load-ListBox{
	<#
		.SYNOPSISs
			This functions helps you load items into a ListBox or CheckedListBox.
	
		.DESCRIPTION
			Use this function to dynamically load items into the ListBox control.
	
		.PARAMETER  ListBox
			The ListBox control you want to add items to.
	
		.PARAMETER  Items
			The object or objects you wish to load into the ListBox's Items collection.
	
		.PARAMETER  DisplayMember
			Indicates the property to display for the items in this control.
		
		.PARAMETER  Append
			Adds the item(s) to the ListBox without clearing the Items collection.
		
		.EXAMPLE
			Load-ListBox $ListBox1 "Red", "White", "Blue"
		
		.EXAMPLE
			Load-ListBox $listBox1 "Red" -Append
			Load-ListBox $listBox1 "White" -Append
			Load-ListBox $listBox1 "Blue" -Append
		
		.EXAMPLE
			Load-ListBox $listBox1 (Get-Process) "ProcessName"
	#>
		Param (
			[ValidateNotNull()]
			[Parameter(Mandatory = $true)]
			[System.Windows.Forms.ListBox]$ListBox,
			[ValidateNotNull()]
			[Parameter(Mandatory = $true)]
			$Items,
			[Parameter(Mandatory = $false)]
			[string]$DisplayMember,
			[switch]$Append
		)
		if (-not $Append)
		{
			$listBox.Items.Clear()
		}
		if ($Items -is [System.Windows.Forms.ListBox+ObjectCollection])
		{
			$listBox.Items.AddRange($Items)
		}
		elseif ($Items -is [Array])
		{
			$listBox.BeginUpdate()
			foreach ($obj in $Items)
			{
				$listBox.Items.Add($obj)
			}
			$listBox.EndUpdate()
		}
		else
		{
			$listBox.Items.Add($Items)
		}
		$listBox.DisplayMember = $DisplayMember
	}
	function Alter-LocalAdmin{
		Param (
			[string[]]$Usernames,
			[string[]]$Servers,
			[ValidateSet("Add", "Remove", "View")]
			[string]$Operation
		)
		$ActiveServers = Check-Servers $Servers
		if ($ActiveServers.count -gt 0)
		{
			$date = Get-Date
			if (($Usernames.count -eq "0") -and ($operation -ne "View"))
			{
				$progress_bar.AppendText("[$(get-date)] You need to enter at least one user ! `n")
			}
			else
			{
				[array]$results = $null
				Get-Job | Remove-Job -ErrorAction SilentlyContinue
				foreach ($server in $ActiveServers)
				{
					Invoke-Command -ComputerName $server -ArgumentList $server -ScriptBlock {
						param ($server)
						$([ADSI]"WinNT://$server/Administrators,group").Members() | % {
							$_.GetType().InvokeMember("Adspath", 'GetProperty', $null, $_, $nulll) #adspath
						}
					} -AsJob -JobName $server
				}
				while ($(Get-Job -State Running).count -gt 0)
				{
					Start-Sleep -Milliseconds 100
				}
				foreach ($server in $servers)
				{
					$result = Receive-Job -Name $server -ErrorAction SilentlyContinue
					$result = $result -replace ('(WinNT://)(.*)', '$2')
					foreach ($resultMember in $result)
					{
						$object = New-Object -TypeName PSCustomObject
						$object | Add-Member -MemberType NoteProperty -Name "Server" -Value $server
						$object | Add-Member -MemberType NoteProperty -Name "Member" -Value $resultMember
						$results += $object
					}
				}
				if ($operation -eq "View")
				{
					Load-DataGridView -DataGridView $usersdatagridview -Item $results
					$usersdatagridview.Visible = $true
				}
				else
				{
					foreach ($username in $usernames)
					{
						If ($results.member -match $username)
						{
							if ($operation -eq "Add")
							{
								$progress_bar.AppendText("[$(get-date)] User $username is already in the Administrators group on server $server ! `n")
							}
							elseif ($operation -eq "Remove")
							{
								Get-Job | Remove-Job -ErrorAction SilentlyContinue
								foreach ($server in $servers)
								{
									Invoke-Command -ComputerName $server -ArgumentList $server, $username -ScriptBlock {
										param (
											$server,
											$username
										)
										$([ADSI]"WinNT://$server/Administrators,group").remove("WinNT://$username,user")
									} -AsJob -JobName $server
									while ($(Get-Job -State Running).count -gt 0)
									{
										Start-Sleep -Milliseconds 100
									}
								}
								foreach ($server in $ActiveServers)
								{
									foreach ($username in $Usernames)
									{
										$progress_bar.AppendText("[$(get-date)] User $username removed from the Local Administrators group on $server . `n")
									}
								}
								Alter-LocalAdmin -Usernames $Usernames -Servers $Servers -Operation View
							}
						}
						else
						{
							
							if ($operation -eq "Add")
							{
								Get-Job | Remove-Job -ErrorAction SilentlyContinue
								foreach ($server in $servers)
								{
									Invoke-Command -ComputerName $server -ArgumentList $server, $username -ScriptBlock {
										param (
											$server,
											$username
										)
										$([ADSI]"WinNT://$server/Administrators,group").add("WinNT://$username,user")
									} -AsJob -JobName $server
									while ($(Get-Job -State Running).count -gt 0)
									{
										Start-Sleep -Milliseconds 100
									}
									Alter-LocalAdmin -Usernames $Usernames -Servers $Servers -Operation View
								}
								foreach ($server in $ActiveServers)
								{
									$result = Receive-Job -Name $server -ErrorAction SilentlyContinue
									foreach ($username in $Usernames)
									{
										$progress_bar.AppendText("[$(get-date)] User $username added in the Local Administrators group on $server . `n")
									}
								}
							}
							elseif ($operation -eq "Remove")
							{
								$progress_bar.AppendText("[$(get-date)] User $username is not in the Local Administrators group on server $server ! `n")
							}
						}
					}
				}
			}
		}
	}
	function Send-IISReset{
		Param (
			[string[]]$Servers,
			[switch]$Stagger
		)
		$ActiveServers = Check-Servers -Servers $Servers
		if ($ActiveServers.count -gt 0)
		{
			if ($stagger)
			{
				$progress_bar.AppendText("[$(get-date)] IISRESET started.`n")
				foreach ($server in $ActiveServers)
				{
					$progress_bar.AppendText("[$(get-date)] Sending IISRESET to $server .`n")
					$results = Invoke-Command -ComputerName $server -ScriptBlock { iisreset }
					foreach ($result in $results)
					{
						$progress_bar.AppendText("[$(get-date)] $result .`n")
					}
					$progress_bar.AppendText("[$(get-date)] IISRESET to $server sent .`n")
				}
			}
			else
			{
				$progress_bar.AppendText("[$(get-date)] IISRESET started.`n")
				Get-Job | Remove-Job
				foreach ($server in $ActiveServers)
				{
					Invoke-Command -ComputerName $Servers -ScriptBlock { iisreset } -AsJob -JobName $server
				}
				while ($(Get-Job -State Running).count -gt 0)
				{
					$progress_bar.AppendText("[$(get-date)] IISRESET command(s) running...`n")
					Start-Sleep -Seconds 4
				}
				if ($(Get-Job -State Completed).count -eq $Servers.count)
				{
					$progress_bar.AppendText("[$(get-date)] IISRESET issued to all servers !`n")
				}
				else
				{
					$FailedJobs = Get-Job -State Failed
					$progress_bar.AppendText("[$(get-date)] Iisreset coomand finished with errors :`n")
					foreach ($FailedJob in $FailedJobs)
					{
						$progress_bar.AppendText("[$(get-date)] $FailedJob `n")
					}
					$progress_bar.AppendText("[$(get-date)] End of errors for server $server `n")
				}
			}
		}
	}
	function Copy-Files{
		Param (
			[string]$Source,
			[string]$Destination,
			[string[]]$Servers
		)
		$ActiveServers = Check-Servers -Servers $Servers
		if ($ActiveServers.count -gt 0)
		{
			If (($Source -eq "") -or ($Source -eq $null))
			{
				$progress_bar.AppendText("[$(get-date)] We need a Source Folder! `n")
			}
			elseif (!(test-path -Path $Source))
			{
				$progress_bar.AppendText("[$(get-date)] Source $Source not accessible. Use either a local path or an accessible share! `n")
			}
			elseif (($Destination -eq "") -or ($Destination -eq $null))
			{
				$progress_bar.AppendText("[$(get-date)] We need a Destination Folder! `n")
			}
			else
			{
				foreach ($server in $ActiveServers)
				{
					$final_source = "$Source\*"
					$final_destination = "\\$server\$((Split-Path $Destination -Qualifier) -replace ":")`$$(Split-Path $Destination -NoQualifier)"
					if (Test-Path -Path $final_destination)
					{
						$progress_bar.AppendText("[$(get-date)] Started copy files process from $Source to $final_destination !`n")
						$copy_process = Copy-Item -Path $final_source -Recurse -Destination $final_destination -Force -ErrorAction SilentlyContinue -ErrorVariable Copy_Variable
						if ($Copy_Variable.count -eq "0")
						{
							
							$progress_bar.AppendText("[$(get-date)] Finished copy files process from $Source to $final_destination !`n")
						}
						else
						{
							$progress_bar.AppendText("[$(get-date)] Error !`n")
							foreach ($copy_error in $copy_variable)
							{
								$progress_bar.AppendText("[$(get-date)] $copy_error !`n")
							}
							$progress_bar.AppendText("[$(get-date)] Endo of errors for server $server `n")
						}
					}
					else
					{
						$progress_bar.AppendText("[$(get-date)] Destination $Destination not accessible. Final destination : $final_destination . Use a local path so we can create the share name! `n")
					}
				}
			}
		}
	}
	function View-Websites{
		Param (
			[string[]]$Servers
		)
		$ActiveServers = Check-Servers -Servers $Servers
		if ($ActiveServers.count -gt 0)
		{
			[array]$ObjectArray = $null
			[array]$websites = $null
			Get-Job | Remove-Job -ErrorAction SilentlyContinue
			foreach ($server in $ActiveServers)
			{
				Invoke-Command -ComputerName $server -ScriptBlock { Get-Website | select id, name, state, physicalpath } -AsJob -JobName $server
			}
			while ($(Get-Job -State Running).count -gt 0)
			{
				Start-Sleep -Milliseconds 100
			}
			Get-Job -State Completed -HasMoreData $true | % { $websites += Receive-Job $_ }
			Get-Job | Remove-Job -ErrorAction SilentlyContinue
			foreach ($website in $websites)
			{
				$path = "$($website.physicalPath)\lb\"
				Invoke-Command -ArgumentList $path -ComputerName $website.PSComputerName -ScriptBlock { param ($path) Get-ChildItem -Path "$path" -ErrorAction SilentlyContinue } -AsJob -JobName "$($website.pscomputername)-$($website.id)" -ErrorAction SilentlyContinue
			}
			while ($(Get-Job -State Running).count -gt 0)
			{
				Start-Sleep -Milliseconds 100
			}
			foreach ($website in $websites)
			{
				$object = New-Object -TypeName System.Management.Automation.PSObject
				$InLoad = $null
				$object | Add-Member -MemberType NoteProperty -Name "Server" -Value $website.PSComputerName
				$object | Add-Member -MemberType NoteProperty -Name "ID" -Value $website.ID
				$object | Add-Member -MemberType NoteProperty -Name "Name" -Value $website.name
				$object | Add-Member -MemberType NoteProperty -Name "State" -Value $website.state
				$files = Get-Job -Name "$($website.pscomputername)-$($website.id)" | Receive-Job
				if ($files -eq $null)
				{
					$InLoad = "N/A"
				}
				elseif ($files.count -ne 1 -and $files.count -ne $null)
				{
					$progress_bar.AppendText("[$(get-date)] Website $($website.name) on server $server has more then one files in the folder : $($website.physicalpath) ! Files found :  `n")
					foreach ($file in $files)
					{
						$progress_bar.AppendText("[$(get-date)] $file  `n")
					}
				}
				else
				{
					if ($files[0].Name -ne "status.txt")
					{
						$InLoad = "False"
					}
					else
					{
						$InLoad = "True"
					}
				}
				$object | Add-Member -MemberType NoteProperty -Name "LBload" -Value $InLoad
				$object | Add-Member -MemberType NoteProperty -Name "Path" -Value $website.physicalpath
				$ObjectArray += $object
			}
			Load-DataGridView $WebsitesDataGridView $($ObjectArray | Sort-Object server)
			$WebsitesDataGridView.Visible = $true
		}
	}
	function View-WebsiteAppPool{
		Param (
			[string[]]$Servers
		)
		$ActiveServers = Check-Servers -Servers $Servers
		if ($ActiveServers.count -gt 0)
		{
			[array]$ObjectArray = $null
			[array]$WebAppPools = $null
			Get-Job | Remove-Job -ErrorAction SilentlyContinue
			foreach ($server in $ActiveServers)
			{
				Invoke-Command -ComputerName $server -ScriptBlock { Get-WebAppPoolState } -AsJob -JobName $server
			}
			while ($(Get-Job -State Running).count -gt 0)
			{
				Start-Sleep -Milliseconds 500
			}
			Get-Job -State Completed -HasMoreData $true | % { $WebAppPools += Receive-Job $_ }
			foreach ($WebAppPool in $WebAppPools)
			{
				$object = New-Object -TypeName System.Management.Automation.PSObject
				$object | Add-Member -MemberType NoteProperty -Name "Server" -Value $WebAppPool.PSComputerName
				$object | Add-Member -MemberType NoteProperty -Name "Name" -Value ($WebAppPool.ItemXPath.substring($WebAppPool.ItemXPath.indexof("@name"))).split("'")[1]
				$object | Add-Member -MemberType NoteProperty -Name "State" -Value $WebAppPool.value
				$ObjectArray += $object
			}
			Load-DataGridView $WebsitesDataGridView $($ObjectArray | Sort-Object server)
			$WebsitesDataGridView.Visible = $true
		}
	}
	function Load-DataGridView{
		<#
		.SYNOPSIS
			This functions helps you load items into a DataGridView.
	
		.DESCRIPTION
			Use this function to dynamically load items into the DataGridView control.
	
		.PARAMETER  DataGridView
			The DataGridView control you want to add items to.
	
		.PARAMETER  Item
			The object or objects you wish to load into the DataGridView's items collection.
		
		.PARAMETER  DataMember
			Sets the name of the list or table in the data source for which the DataGridView is displaying data.
	
		#>
		Param (
			[ValidateNotNull()]
			[Parameter(Mandatory=$true)]
			[System.Windows.Forms.DataGridView]$DataGridView,
			[ValidateNotNull()]
			[Parameter(Mandatory=$true)]
			$Item,
		    [Parameter(Mandatory=$false)]
			[string]$DataMember
		)
		$DataGridView.SuspendLayout()
		$DataGridView.DataMember = $DataMember
		
		if ($Item -is [System.ComponentModel.IListSource]`
		-or $Item -is [System.ComponentModel.IBindingList] -or $Item -is [System.ComponentModel.IBindingListView] )
		{
			$DataGridView.DataSource = $Item
		}
		else
		{
			$array = New-Object System.Collections.ArrayList
			
			if ($Item -is [System.Collections.IList])
			{
				$array.AddRange($Item)
			}
			else
			{	
				$array.Add($Item)	
			}
			$DataGridView.DataSource = $array
		}
		
		$DataGridView.ResumeLayout()
	}
	function ConvertTo-DataTable{
		<#
			.SYNOPSIS
				Converts objects into a DataTable.
		
			.DESCRIPTION
				Converts objects into a DataTable, which are used for DataBinding.
		
			.PARAMETER  InputObject
				The input to convert into a DataTable.
		
			.PARAMETER  Table
				The DataTable you wish to load the input into.
		
			.PARAMETER RetainColumns
				This switch tells the function to keep the DataTable's existing columns.
			
			.PARAMETER FilterWMIProperties
				This switch removes WMI properties that start with an underline.
		
			.EXAMPLE
				$DataTable = ConvertTo-DataTable -InputObject (Get-Process)
		#>
		[OutputType([System.Data.DataTable])]
		param(
		[ValidateNotNull()]
		$InputObject, 
		[ValidateNotNull()]
		[System.Data.DataTable]$Table,
		[switch]$RetainColumns,
		[switch]$FilterWMIProperties)
		
		if($Table -eq $null)
		{
			$Table = New-Object System.Data.DataTable
		}
	
		if($InputObject-is [System.Data.DataTable])
		{
			$Table = $InputObject
		}
		else
		{
			if(-not $RetainColumns -or $Table.Columns.Count -eq 0)
			{
				#Clear out the Table Contents
				$Table.Clear()
	
				if($InputObject -eq $null){ return } #Empty Data
				
				$object = $null
				#find the first non null value
				foreach($item in $InputObject)
				{
					if($item -ne $null)
					{
						$object = $item
						break	
					}
				}
	
				if($object -eq $null) { return } #All null then empty
				
				#Get all the properties in order to create the columns
				foreach ($prop in $object.PSObject.Get_Properties())
				{
					if(-not $FilterWMIProperties -or -not $prop.Name.StartsWith('__'))#filter out WMI properties
					{
						#Get the type from the Definition string
						$type = $null
						
						if($prop.Value -ne $null)
						{
							try{ $type = $prop.Value.GetType() } catch {}
						}
	
						if($type -ne $null) # -and [System.Type]::GetTypeCode($type) -ne 'Object')
						{
			      			[void]$table.Columns.Add($prop.Name, $type) 
						}
						else #Type info not found
						{ 
							[void]$table.Columns.Add($prop.Name) 	
						}
					}
			    }
				
				if($object -is [System.Data.DataRow])
				{
					foreach($item in $InputObject)
					{	
						$Table.Rows.Add($item)
					}
					return  @(,$Table)
				}
			}
			else
			{
				$Table.Rows.Clear()	
			}
			
			foreach($item in $InputObject)
			{		
				$row = $table.NewRow()
				
				if($item)
				{
					foreach ($prop in $item.PSObject.Get_Properties())
					{
						if($table.Columns.Contains($prop.Name))
						{
							$row.Item($prop.Name) = $prop.Value
						}
					}
				}
				[void]$table.Rows.Add($row)
			}
		}
	
		return @(,$Table)	
	}
	function Sort-ListViewColumn{
		<#
		.SYNOPSIS
			Sort the ListView's item using the specified column.
	
		.DESCRIPTION
			Sort the ListView's item using the specified column.
			This function uses Add-Type to define a class that sort the items.
			The ListView's Tag property is used to keep track of the sorting.
	
		.PARAMETER ListView
			The ListView control to sort.
	
		.PARAMETER ColumnIndex
			The index of the column to use for sorting.
			
		.PARAMETER  SortOrder
			The direction to sort the items. If not specified or set to None, it will toggle.
		
		.EXAMPLE
			Sort-ListViewColumn -ListView $listview1 -ColumnIndex 0
	#>
		param (
			[ValidateNotNull()]
			[Parameter(Mandatory = $true)]
			[System.Windows.Forms.ListView]$ListView,
			[Parameter(Mandatory = $true)]
			[int]$ColumnIndex,
			[System.Windows.Forms.SortOrder]$SortOrder = 'None')
		
		if (($ListView.Items.Count -eq 0) -or ($ColumnIndex -lt 0) -or ($ColumnIndex -ge $ListView.Columns.Count))
		{
			return;
		}
		
		#region Define ListViewItemComparer
		try
		{
			$local:type = [ListViewItemComparer]
		}
		catch
		{
			Add-Type -ReferencedAssemblies ('System.Windows.Forms') -TypeDefinition  @" 
	using System;
	using System.Windows.Forms;
	using System.Collections;
	public class ListViewItemComparer : IComparer
	{
	    public int column;
	    public SortOrder sortOrder;
	    public ListViewItemComparer()
	    {
	        column = 0;
			sortOrder = SortOrder.Ascending;
	    }
	    public ListViewItemComparer(int column, SortOrder sort)
	    {
	        this.column = column;
			sortOrder = sort;
	    }
	    public int Compare(object x, object y)
	    {
			if(column >= ((ListViewItem)x).SubItems.Count)
				return  sortOrder == SortOrder.Ascending ? -1 : 1;
		
			if(column >= ((ListViewItem)y).SubItems.Count)
				return sortOrder == SortOrder.Ascending ? 1 : -1;
		
			if(sortOrder == SortOrder.Ascending)
	        	return String.Compare(((ListViewItem)x).SubItems[column].Text, ((ListViewItem)y).SubItems[column].Text);
			else
				return String.Compare(((ListViewItem)y).SubItems[column].Text, ((ListViewItem)x).SubItems[column].Text);
	    }
	}
"@ | Out-Null
		}
		#endregion
		
		if ($ListView.Tag -is [ListViewItemComparer])
		{
			#Toggle the Sort Order
			if ($SortOrder -eq [System.Windows.Forms.SortOrder]::None)
			{
				if ($ListView.Tag.column -eq $ColumnIndex -and $ListView.Tag.sortOrder -eq 'Ascending')
				{
					$ListView.Tag.sortOrder = 'Descending'
				}
				else
				{
					$ListView.Tag.sortOrder = 'Ascending'
				}
			}
			else
			{
				$ListView.Tag.sortOrder = $SortOrder
			}
			
			$ListView.Tag.column = $ColumnIndex
			$ListView.Sort() #Sort the items
		}
		else
		{
			if ($SortOrder -eq [System.Windows.Forms.SortOrder]::None)
			{
				$SortOrder = [System.Windows.Forms.SortOrder]::Ascending
			}
			
			#Set to Tag because for some reason in PowerShell ListViewItemSorter prop returns null
			$ListView.Tag = New-Object ListViewItemComparer ($ColumnIndex, $SortOrder)
			$ListView.ListViewItemSorter = $ListView.Tag #Automatically sorts
		}
	}
	function Add-ListViewItem{
	<#
		.SYNOPSIS
			Adds the item(s) to the ListView and stores the object in the ListViewItem's Tag property.
	
		.DESCRIPTION
			Adds the item(s) to the ListView and stores the object in the ListViewItem's Tag property.
	
		.PARAMETER ListView
			The ListView control to add the items to.
	
		.PARAMETER Items
			The object or objects you wish to load into the ListView's Items collection.
			
		.PARAMETER  ImageIndex
			The index of a predefined image in the ListView's ImageList.
		
		.PARAMETER  SubItems
			List of strings to add as Subitems.
		
		.PARAMETER Group
			The group to place the item(s) in.
		
		.PARAMETER Clear
			This switch clears the ListView's Items before adding the new item(s).
		
		.EXAMPLE
			Add-ListViewItem -ListView $listview1 -Items "Test" -Group $listview1.Groups[0] -ImageIndex 0 -SubItems "Installed"
	#>
		
		Param (
			[ValidateNotNull()]
			[Parameter(Mandatory = $true)]
			[System.Windows.Forms.ListView]$ListView,
			[ValidateNotNull()]
			[Parameter(Mandatory = $true)]
			$Items,
			[int]$ImageIndex = -1,
			[string[]]$SubItems,
			$Group,
			[switch]$Clear)
		
		if ($Clear)
		{
			$ListView.Items.Clear();
		}
		
		$lvGroup = $null
		if ($Group -is [System.Windows.Forms.ListViewGroup])
		{
			$lvGroup = $Group
		}
		elseif ($Group -is [string])
		{
			#$lvGroup = $ListView.Group[$Group] # Case sensitive
			foreach ($groupItem in $ListView.Groups)
			{
				if ($groupItem.Name -eq $Group)
				{
					$lvGroup = $groupItem
					break
				}
			}
			
			if ($lvGroup -eq $null)
			{
				$lvGroup = $ListView.Groups.Add($Group, $Group)
			}
		}
		
		if ($Items -is [Array])
		{
			$ListView.BeginUpdate()
			foreach ($item in $Items)
			{
				$listitem = $ListView.Items.Add($item.ToString(), $ImageIndex)
				#Store the object in the Tag
				$listitem.Tag = $item
				
				if ($SubItems -ne $null)
				{
					$listitem.SubItems.AddRange($SubItems)
				}
				
				if ($lvGroup -ne $null)
				{
					$listitem.Group = $lvGroup
				}
			}
			$ListView.EndUpdate()
		}
		else
		{
			#Add a new item to the ListView
			$listitem = $ListView.Items.Add($Items.ToString(), $ImageIndex)
			#Store the object in the Tag
			$listitem.Tag = $Items
			
			if ($SubItems -ne $null)
			{
				$listitem.SubItems.AddRange($SubItems)
			}
			
			if ($lvGroup -ne $null)
			{
				$listitem.Group = $lvGroup
			}
		}
	}
	function Show-Services{
		param (
			[string]$filter,
			[string[]]$Servers
		)
		[array]$ActiveServers = Check-Servers -Servers $Servers
		if ($ActiveServers.count -gt 0)
		{
			$ServicesObjects = $null
			$ServicesObjects = Invoke-Command -ArgumentList $filter -ComputerName $ActiveServers -ScriptBlock { param ($filter)Get-Service | ? { $_.servicename -match $filter } | select ServiceName, Displayname, status } | select  pscomputername, ServiceName, Displayname, status
			$ServicesObjects = $ServicesObjects | Sort-Object
			Load-DataGridView $ServicesDataGridView $ServicesObjects
			$ServicesDataGridView.Visible = $true
		}
	}
	function Out-Notepad{
		param
		(
			[Parameter(Mandatory = $true, ValueFromPipeline = $true)]
			[String][AllowEmptyString()]
			$Text
		)
		
		begin
		{
			$sb = New-Object System.Text.StringBuilder
		}
		
		process
		{
			$null = $sb.AppendLine($Text)
		}
		end
		{
			$text = $sb.ToString()
			
			$process = Start-Process notepad -PassThru
			$null = $process.WaitForInputIdle()
			
			
			$sig = '
      [DllImport("user32.dll", EntryPoint = "FindWindowEx")]public static extern IntPtr FindWindowEx(IntPtr hwndParent, IntPtr hwndChildAfter, string lpszClass, string lpszWindow);
      [DllImport("User32.dll")]public static extern int SendMessage(IntPtr hWnd, int uMsg, int wParam, string lParam);
    '
			
			$type = Add-Type -MemberDefinition $sig -Name APISendMessage -PassThru
			$hwnd = $process.MainWindowHandle
			[IntPtr]$child = $type::FindWindowEx($hwnd, [IntPtr]::Zero, "Edit", $null)
			$null = $type::SendMessage($child, 0x000C, 0, $text)
		}
	}
	Function Get-LocalConnections{
		<#
		.Synopsis
		   Get Local connections
		.DESCRIPTION
		   This commandlet gets the local connections for the provided list of computers
		.EXAMPLE
		   Get-LocalConnections -ComputerName "computer1.lab.pri" -Port "80"
		#>
		Param
		(
			# Param1 help description
			[Parameter(Mandatory = $true,
					   ValueFromPipeline = $true,
					   ValueFromPipelineByPropertyName = $true)]
			[String[]]$ComputerName,
			[Parameter(Mandatory = $true,
					   ValueFromPipeline = $true,
					   ValueFromPipelineByPropertyName = $true)]
			[int]$Port,
			[switch]$Continuous
		)
		
		Begin
		{
		}
		Process
		{
			if ($Continuous)
			{
				while ($true)
				{
					[array]$objects = $null
					foreach ($computer in $ComputerName)
					{
						$object = New-Object -TypeName psobject
						$object | Add-Member –Type NoteProperty –Name "Server" -Value $computer
						$result = Invoke-Command -ComputerName $computer -ScriptBlock { netstat -ant } | Select-String -Pattern ":$Port"
						if ($result.count -gt 0)
						{
							$object | Add-Member –Type NoteProperty –Name "Total Conn" -Value $result.count
							$object | Add-Member –Type NoteProperty –Name "CLOSE_WAIT" -Value $($result | Select-String -SimpleMatch "CLOSE_WAIT").count
							$object | Add-Member –Type NoteProperty –Name "ESTABLISHED" -Value $($result | Select-String -SimpleMatch "ESTABLISHED").count
							$object | Add-Member –Type NoteProperty –Name "TIME_WAIT" -Value $($result | Select-String -SimpleMatch "TIME_WAIT").count
							$object | Add-Member –Type NoteProperty –Name "Date" -Value (get-date)
						}
						$objects += $object
					}
					Clear-Host
					$objects | ft -AutoSize
				}
			}
			else
			{
				[array]$objects = $null
				foreach ($computer in $ComputerName)
				{
					$object = New-Object -TypeName psobject
					$object | Add-Member –Type NoteProperty –Name "Server" -Value $computer
					$result = Invoke-Command -ComputerName $computer -ScriptBlock { netstat -ant } | Select-String -Pattern ":$Port"
					if ($result.count -gt 0)
					{
						$object | Add-Member –Type NoteProperty –Name "Total Conn" -Value $result.count
						$object | Add-Member –Type NoteProperty –Name "CLOSE_WAIT" -Value $($result | Select-String -SimpleMatch "CLOSE_WAIT").count
						$object | Add-Member –Type NoteProperty –Name "ESTABLISHED" -Value $($result | Select-String -SimpleMatch "ESTABLISHED").count
						$object | Add-Member –Type NoteProperty –Name "TIME_WAIT" -Value $($result | Select-String -SimpleMatch "TIME_WAIT").count
						$object | Add-Member –Type NoteProperty –Name "Date" -Value (get-date)
					}
					$objects += $object
				}
				$objects | ft -AutoSize
			}
			
		}
		End
		{
		}
	}
	function Replace-Notepad {
		<# 
		Author: Bob@BobHodges.net
		Date: Aug 11th, 2015
		Description: Installs NotePad++ and replaces default notepad.exe with NotePad++ executable in system folders.
		Note: The Install-Package cmdlet requires WMF5, install Notepad++ manually if you don't have it and comment out line 10. 
		#>	
		param (
		[switch]$Revert
		)
		$Notepads = "$($env:systemroot)\Notepad.exe", "$($env:systemroot)\System32\Notepad.exe", "$($env:systemroot)\SysWOW64\Notepad.exe"
		$NotepadPlus = Resolve-Path "$($env:systemdrive)\Program Files*\Notepad++\notepad++.exe"
		$NotepadPlusDLL = Resolve-Path "$($env:systemdrive)\Program Files*\Notepad++\SciLexer.dll"
		If ($NotepadPlus)
		{
			if (!($Revert))
			{
				# Function to take ownership of the notepad files.
				Function Set-Ownership($file)
				{
					# The takeown.exe file should already exist in Win7 - Win10 
					try { & takeown /f $file }
					catch { Write-Output "Failed to take ownership of $file" }
				}
				
				# This function gives us permission to change the notepad.exe files.
				Function Set-Permissions($file)
				{
					$ACL = Get-Acl $file
					$AccessRule = New-Object System.Security.AccessControl.FileSystemAccessRule("Everyone", "FullControl", "Allow")
					$ACL.SetAccessRule($AccessRule)
					$ACL | Set-Acl $file
				}
				
				# Loops through each notepad path.
				Foreach ($Notepad in $Notepads)
				{
					# Checks for the required paths before attempting changes.
					if (!$(Test-Path $Notepad) -or !$(Test-Path $NotepadPlus)) { continue }
					
					# Takes ownership of the file, then changes the NTFS permissions to allow us to rename it. 
					Set-Ownership $Notepad
					Set-Permissions $Notepad
					
					Write-Output "Replacing Notepad file: $Notepad `r`n"
					Rename-Item -Path $Notepad -NewName "Notepad.exe.bak" -ErrorAction SilentlyContinue
					
					# Copies the NotePad++ file and the dependant DLL file to the current path. 
					Copy-Item -Path $NotepadPlus -Destination $Notepad
					Copy-Item -Path $NotepadPlusDLL -Destination $(Split-Path $Notepad -Parent)
				}
				# Run Notepad++ once to avoid XML error.
				& $NotepadPlus
			}
			else
			{
			}
		}
		else
		{
			$progress_bar.AppendText("Notepad++ not detected. Please install it first !")
		}
		
	}
	function Start-NetshPacketCapture{
		Param (
			[string[]]$Servers,
			[int]$CaptureSize,
			[string]$Adapter,
			[string]$Filter
		)
		[array]$ActiveServers = Check-Servers -Servers $servers
		if ($ActiveServers.count -gt 0)
		{
			Get-Job | Remove-Job -ErrorAction SilentlyContinue
			Invoke-Command -ComputerName $activeServers -ArgumentList $CaptureSize, $Adapter -ScriptBlock {
				param ($CaptureSize)
				netsh.exe trace start capture=yes report=no persistent=no tracefile=$($env:windir)\temp\trace_$($env:computername)_$(get-date -Format ssmmHHddMMyy).etl `
						  maxSize=$CaptureSize fileMode=single correlation=disabled `
						  CaptureInterface=$($(Get-NetAdapter -Name $Adapter).InterfaceGuid) $Filter `
				
			} -AsJob
			while ($(Get-Job -State Running).count -gt 0)
			{
				$progress_bar.AppendText("[$(get-date)] Command(s) running...`n")
				Start-Sleep -Seconds 2
			}
			$jobs = Get-Job
			if (($jobs | Where-Object { $_.jobstateinfo.state -eq "Completed" }).count -eq $activeServers.count)
			{
				$progress_bar.AppendText("[$(get-date)] Trace start command(s) sent successfully to server(s)! `n")
			}
			else
			{
				foreach ($job in $($jobs | Where-Object { $_.jobstateinfo.state -eq "Failed" }))
				{
					$progress_bar.AppendText("[$(get-date)] Command failed for $($job.location) ! `n")
				}
			}
		}
	}
	function Stop-NetshPacketCapture{
		Param (
			[string[]]$Servers
		)
		[array]$ActiveServers = Check-Servers -Servers $Servers
		if ($ActiveServers.count -gt 0)
		{
			Get-Job | Remove-Job -ErrorAction SilentlyContinue
			Invoke-Command -ComputerName $ActiveServers -ScriptBlock { netsh.exe trace stop } -AsJob
		}
	}
	function Show-NetshPacketCapture{
		Param (
			[string[]]$Servers
		)
		[array]$ActiveServers = Check-Servers -Servers $Servers
		if ($ActiveServers.count -gt 0)
		{
			$traces = $null
			$datagridviewShowPacketCaptures = $null
			$traces = Invoke-Command -ComputerName $ActiveServers -ScriptBlock { Get-ChildItem -Path "$($env:windir)\temp\" -Filter "trace*.etl" | Sort-Object -Property lastwritetime -Descending | Select-Object -first 5 }
			Load-DataGridView -DataGridView $datagridviewShowPacketCaptures -Item $($traces | select pscomputername, name, creationtime, lastwritetime, length)
			$datagridviewShowPacketCaptures.Visible = $true
		}
	}
	function Show-StatusNetshPacketCapture{
		Param (
			[string[]]$Servers
		)
		[array]$activeServers = Check-Servers -Servers $Servers
		if ($activeServers.count -gt 0)
		{
			Get-Job | Remove-Job
			$JobResult = $null
			[array]$ObjectsArray = $null
			foreach ($ActiveServer in $ActiveServers)
			{
				Invoke-Command -ComputerName $ActiveServer -ScriptBlock { netsh trace status show } -AsJob -JobName $ActiveServer
			}
			while ($(Get-Job -State Running).count -gt 0)
			{
				$progress_bar.AppendText("[$(get-date)] Command(s) running...`n")
				Start-Sleep -Seconds 2
			}
			foreach ($ActiveServer in $ActiveServers)
			{
				$JobResult = $($($(Receive-Job -Job $ActiveServer) | Out-String).Split(@("Provider:"), [System.StringSplitOptions]::RemoveEmptyEntries)[0] | foreach { $_.split(" ") }).replace(":", "") | ?{ $_ }
				$object = New-Object -TypeName PSCustomObject
				[int]$i = 0
				while ($i -lt 9)
				{
					$object | Add-Member -MemberType NoteProperty -Name $JobResult[$i] -Value $server[$i+1]
					$i+=2
				}
				$ObjectsArray += $object
			}
			Load-DataGridView -DataGridView $datagridviewShowPacketCaptures -Item $ObjectsArray
			$datagridviewShowPacketCaptures.Visible = $true
		}
	}
	function Get-NetshPacketCapture { }
	$SelectAllServers_CheckedChanged ={
		if ($SelectAllServers.Checked -eq $true){
			for ($i = 0; $i -lt $ServerList.Items.Count; $i++)
			{
				$ServerList.SetItemChecked($i,$true)
			}
		}
		elseif ($SelectAllServers.Checked -eq $false){
			for ($i = 0; $i -lt $ServerList.Items.Count; $i++)
			{
				$ServerList.SetItemChecked($i, $false)
			}
		}
	}
	$Items = $adServerNames
	Load-ListBox $ServerList $items
	
	$progress_bar_TextChanged = {
		$progress_bar.SelectionStart = $progress_bar.TextLength;
		$progress_bar.ScrollToCaret()
		$progress_bar.Focus()
	}
	
	$ServerFilter_TextChanged = {
		#TODO: Place custom script here
		if ($ServerFilter.Text -ne $null){
			$items = $adServerNames -match $ServerFilter.Text
			Load-ListBox $ServerList $items
		}
		else
		{
			$Items = $adServerNames
			Load-ListBox $ServerList $items
		}
	}
	
	$buttonViewWebsites_Click = {
		View-Websites -Servers $ServerList.CheckedItems
	}
	$buttonStartWebsite_Click = {
		for ($i = 0; $i -lt $WebsitesDataGridView.RowCount; $i++)
		{
			if ($($WebsitesDataGridView.rows[$i].cells[0].value) -eq $true)
			{
				$computername = $WebsitesDataGridView.rows[$i].cells[1].value
				$WebsiteName = $WebsitesDataGridView.rows[$i].cells[2].value
				Invoke-Command -ComputerName $computername -ArgumentList $WebsiteName -ScriptBlock { param ($website) Start-Website -Name $Website }
			}
		}
		View-Websites -serverList $ServerList.CheckedItems
	}
	$buttonStopWebsite_Click = {
		for ($i = 0; $i -lt $WebsitesDataGridView.RowCount; $i++)
		{
			if ($($WebsitesDataGridView.rows[$i].cells[0].value) -eq $true)
			{
				$computername = $WebsitesDataGridView.rows[$i].cells[1].value
				$WebsiteName = $WebsitesDataGridView.rows[$i].cells[2].value
				Invoke-Command -ComputerName $computername -ArgumentList $WebsiteName -ScriptBlock { param ($website) Stop-Website -Name $Website }
			}
		}
		View-Websites -serverList $ServerList.CheckedItems
	}
	$buttonWebConfig_Click = {
		for ($i = 0; $i -lt $WebsitesDataGridView.RowCount; $i++)
		{
			if ($($WebsitesDataGridView.rows[$i].cells[0].value) -eq $true)
			{
				$computername = $WebsitesDataGridView.rows[$i].cells[1].value
				$WebsiteName = $WebsitesDataGridView.rows[$i].cells[2].value
				$websitePath = $WebsitesDataGridView.rows[$i].cells[6].value
				$splitpath = Split-Path $websitePath -NoQualifier
				$Drive = Split-Path $websitePath -Qualifier
				$fullpath = "\\$computername\$($Drive[0])`$$splitPath\web.config"
				notepad "$fullpath"
			}
		}
	}
	$buttonHostsFile_Click = {
		foreach ($computername in $($ServerList.CheckedItems))
		{
			$fullpath = "\\$computername\c`$\Windows\System32\drivers\etc\hosts"
			notepad "$fullpath"
		}
	}
	$buttonReleaseconfig_Click = {
		for ($i = 0; $i -lt $WebsitesDataGridView.RowCount; $i++)
		{
			if ($($WebsitesDataGridView.rows[$i].cells[0].value) -eq $true)
			{
				$computername = $WebsitesDataGridView.rows[$i].cells[1].value
				$WebsiteName = $WebsitesDataGridView.rows[$i].cells[2].value
				$websitePath = $WebsitesDataGridView.rows[$i].cells[6].value
				$splitpath = Split-Path $websitePath -NoQualifier
				$Drive = Split-Path $websitePath -Qualifier
				$fullpath = "\\$computername\$($Drive[0])`$$splitPath\release.lctg.config"
				notepad "$fullpath"
			}
		}
	}
	
	$buttonInLoad_Click={
		#TODO: Place custom script here
	}
	$buttonOffLoad_Click = {
		#TODO: Place custom script here
	}
	$buttonIISRESET_Click = {
		if ($checkboxIISResetStagger.Checked)
		{
			Send-IISReset -Servers $ServerList.CheckedItems -Stagger
		}
		else
		{
			Send-IISReset -Servers $ServerList.CheckedItems
		}
	}
	
	$buttonViewServices_Click = {
		Show-Services -filter $ServicesFilterTextBox.Text -servers $ServerList.CheckedItems
	}
	$buttonStartServices_Click = {
		for ($i = 0; $i -lt $ServicesDataGridView.RowCount; $i++)
		{
			if ($($ServicesDataGridView.rows[$i].cells[0].value) -eq $true)
			{
				$computername = $ServicesDataGridView.rows[$i].cells[1].value
				$servicename = $ServicesDataGridView.rows[$i].cells[2].value
				Invoke-Command -ComputerName $computername -ArgumentList $servicename -ScriptBlock {param ($servicename) Start-Service $servicename}
			}
		}
		Show-Services -filter $ServicesFilterTextBox.Text -servers $ServerList.CheckedItems -datagridview $ServicesDataGridView
	}
	$buttonStopServices_Click = {
		for ($i = 0; $i -lt $ServicesDataGridView.RowCount; $i++)
		{
			if ($($ServicesDataGridView.rows[$i].cells[0].value) -eq $true)
			{
				$computername = $ServicesDataGridView.rows[$i].cells[1].value
				$servicename = $ServicesDataGridView.rows[$i].cells[2].value
				Invoke-Command -ComputerName $computername -ArgumentList $servicename -ScriptBlock { param ($servicename) Stop-Service $servicename }
			}
		}
		Show-Services -filter $ServicesFilterTextBox.Text -servers $ServerList.CheckedItems -datagridview $ServicesDataGridView
	}
	$buttonRestartServices_Click = {
		for ($i = 0; $i -lt $ServicesDataGridView.RowCount; $i++)
		{
			if ($($ServicesDataGridView.rows[$i].cells[0].value) -eq $true)
			{
				$computername = $ServicesDataGridView.rows[$i].cells[1].value
				$servicename = $ServicesDataGridView.rows[$i].cells[2].value
				Invoke-Command -ComputerName $computername -ArgumentList $servicename -ScriptBlock { param ($servicename) Restart-Service $servicename }
			}
		}
		Show-Services -filter $ServicesFilterTextBox.Text -servers $ServerList.CheckedItems -datagridview $ServicesDataGridView
	}
	$buttonApplyFilter_Click={
		Show-Services -filter $ServicesFilterTextBox.Text -servers $ServerList.CheckedItems -datagridview $ServicesDataGridView
	}
	
	$buttonViewAppPool_Click={
		View-WebsiteAppPool -serverList $ServerList.CheckedItems
	}
	$buttonStartAppPool_Click={
		for ($i = 0; $i -lt $WebsitesDataGridView.RowCount; $i++)
		{
			if ($($WebsitesDataGridView.rows[$i].cells[0].value) -eq $true)
			{
				$computername = $WebsitesDataGridView.rows[$i].cells[1].value
				$WebAppPoolName = $WebsitesDataGridView.rows[$i].cells[2].value
				Invoke-Command -ComputerName $computername -ArgumentList $WebAppPoolName -ScriptBlock { param ($WebAppPool) Import-Module webadministration; Start-WebAppPool -Name $WebAppPool }
			}
		}
		View-WebsiteAppPool -serverList $ServerList.CheckedItems
	}
	$buttonStopAppPool_Click = {
		for ($i = 0; $i -lt $WebsitesDataGridView.RowCount; $i++)
		{
			if ($($WebsitesDataGridView.rows[$i].cells[0].value) -eq $true)
			{
				$computername = $WebsitesDataGridView.rows[$i].cells[1].value
				$WebAppPoolName = $WebsitesDataGridView.rows[$i].cells[2].value
				Invoke-Command -ComputerName $computername -ArgumentList $WebAppPoolName -ScriptBlock { param ($WebAppPool) Import-Module webadministration; Stop-WebAppPool -Name $WebAppPool }
			}
		}
		View-WebsiteAppPool -serverList $ServerList.CheckedItems
	}
	
	$buttonAddAdmin_Click = {
		Alter-LocalAdmin -Servers $ServerList.CheckedItems -Usernames ($Usernames.Text -split ",") -Operation Add
	}
	$buttonRemoveAdmin_Click={
		Alter-LocalAdmin -Servers $ServerList.CheckedItems -Usernames ($Usernames.Text -split ",") -Operation Remove
	}
	$buttonShowAdmins_Click = {
		Alter-LocalAdmin -Servers $ServerList.CheckedItems -Operation View
	}
	
	$Copy_Files_Click={
		Copy-Files -Destination $Destination.Text -Source $Source.Text -Servers $ServerList.CheckedItems
	}
	
	$buttonStartPacketCapture_Click={
		Start-NetshPacketCapture -servers $ServerList.CheckedItems -CaptureSize $TextboxCaptureSize.Text -Adapter $textboxNetworkAdapterPacketCapture.Text -Filter $textboxFilterPacketCapture1.Text
	}
	$buttonStopPacketCapture_Click={
		Stop-NetshPacketCapture -servers $ServerList.CheckedItems
		
	}
	$buttonShowStatusPacketCapture_Click = {
		Show-StatusNetshPacketCapture -servers $ServerList.CheckedItems
	}
	$checkboxTraceConvertToPcap_CheckedChanged={
		#TODO: Place custom script here
		
	}
	$buttonShowPacketCapture_Click={
		Show-NetshPacketCapture -servers $ServerList.CheckedItems
	}
	# --End User Generated Script--
	#----------------------------------------------
	#region Generated Events
	#----------------------------------------------
	
	$Form_StateCorrection_Load=
	{
		#Correct the initial state of the form to prevent the .Net maximized form issue
		$MainForm.WindowState = $InitialFormWindowState
	}
	
	$Form_Cleanup_FormClosed=
	{
		#Remove all event handlers from the controls
		try
		{
			$SelectAllServers.remove_CheckedChanged($SelectAllServers_CheckedChanged)
			$ServerFilter.remove_TextChanged($ServerFilter_TextChanged)
			$progress_bar.remove_TextChanged($progress_bar_TextChanged)
			$buttonShowAdmins.remove_Click($buttonShowAdmins_Click)
			$buttonRemoveAdmin.remove_Click($buttonRemoveAdmin_Click)
			$buttonAddAdmin.remove_Click($buttonAddAdmin_Click)
			$Copy_Files.remove_Click($Copy_Files_Click)
			$buttonReleaseconfig.remove_Click($buttonReleaseconfig_Click)
			$buttonStopAppPool.remove_Click($buttonStopAppPool_Click)
			$buttonStartAppPool.remove_Click($buttonStartAppPool_Click)
			$buttonViewAppPool.remove_Click($buttonViewAppPool_Click)
			$buttonWebConfig.remove_Click($buttonWebConfig_Click)
			$buttonIISRESET.remove_Click($buttonIISRESET_Click)
			$buttonHostsFile.remove_Click($buttonHostsFile_Click)
			$buttonInLoad.remove_Click($buttonInLoad_Click)
			$buttonOffLoad.remove_Click($buttonOffLoad_Click)
			$buttonStopWebsite.remove_Click($buttonStopWebsite_Click)
			$buttonStartWebsite.remove_Click($buttonStartWebsite_Click)
			$buttonViewWebsites.remove_Click($ButtonViewWebsites_Click)
			$buttonApplyFilter.remove_Click($buttonApplyFilter_Click)
			$buttonRestartServices.remove_Click($buttonRestartServices_Click)
			$buttonStartServices.remove_Click($buttonStartServices_Click)
			$buttonStopServices.remove_Click($buttonStopServices_Click)
			$buttonViewServices.remove_Click($buttonViewServices_Click)
			$buttonStopPacketCapture.remove_Click($buttonStopPacketCapture_Click)
			$buttonStartPacketCapture.remove_Click($buttonStartPacketCapture_Click)
			$checkboxTraceConvertToPcap.remove_CheckedChanged($checkboxTraceConvertToPcap_CheckedChanged)
			$buttonShowPacketCapture.remove_Click($buttonShowPacketCapture_Click)
			$buttonShowStatusPacketCapture.remove_Click($buttonShowStatusPacketCapture_Click)
			$MainForm.remove_Load($Form_StateCorrection_Load)
			$MainForm.remove_FormClosed($Form_Cleanup_FormClosed)
		}
		catch [Exception]
		{ }
	}
	#endregion Generated Events

	#----------------------------------------------
	#region Generated Form Code
	#----------------------------------------------
	$MainForm.SuspendLayout()
	$tabcontrol1.SuspendLayout()
	$Local_Admin.SuspendLayout()
	$Copy_Files_tab.SuspendLayout()
	$IIS_websites.SuspendLayout()
	$tabpage1.SuspendLayout()
	$PacketCapture.SuspendLayout()
	$groupbox1.SuspendLayout()
	$groupbox2.SuspendLayout()
	#
	# MainForm
	#
	$MainForm.Controls.Add($SelectAllServers)
	$MainForm.Controls.Add($ServerFilter)
	$MainForm.Controls.Add($progress_bar)
	$MainForm.Controls.Add($tabcontrol1)
	$MainForm.Controls.Add($ServerList)
	$MainForm.AutoScaleDimensions = '96, 96'
	$MainForm.AutoScaleMode = 'Dpi'
	$MainForm.AutoScroll = $True
	$MainForm.AutoSizeMode = 'GrowAndShrink'
	$MainForm.CausesValidation = $False
	$MainForm.ClientSize = '805, 526'
	$MainForm.Font = 'Microsoft Sans Serif, 6.75pt'
	#region Binary Data
	$MainForm.Icon = [System.Convert]::FromBase64String('
AAABAAUAEBAAAAEAIABoBAAAVgAAABgYAAABACAAiAkAAL4EAAAgIAAAAQAgAKgQAABGDgAAMDAA
AAEAIACoJQAA7h4AAENBAAABACAAQEcAAJZEAAAoAAAAEAAAACAAAAABACAAAAAAAAAEAADDDgAA
ww4AAAAAAAAAAAAA/f3///r/+//7+/n///////Xy/v+xqOP/dWLO/2ZOyf9lTsj/d2LP/7Sl4//2
8P3//v////n7/f////3///////z+/P/8+v3//////7616f9NOcT/Wz/J/4991v+toeP/rqLh/5B+
1f9bQMT/TzvA/8C16v//////+/36///+/v/8+vz//////6Sa3f8+H7j/rp/j////////////////
/////////////fz//62g5P89H77/ppve///////9+/7//////8O66/8+H7z/zMTw//////++tez/
bFfO/1k+zP9bQcr/gWrV/9jR8P//////ysTx/z8guf/FuOr///////f4+/9WPsT/ppLk//////+l
n9n/OyO8/45+3v+8sez/r6Tm/3Nf0v9FJLv/zcbr//////+nl9//WUK///z6/f+6reb/VkDB//n4
/f///vz/4t3w/+Hg8////////v79////////////3NDx/+7q9/////7/+Pj9/1lAxv+7rej/f2zT
/4Z22P//////+/v7///////79/7//f38//r5+v/7+/r///39//35////////+/j8//////+Jedj/
fmvQ/1tFwP+kmuH//////9LR6v9iSMv/TzHK/25ZzP/t6fb/4+D0/2dTy/9MMsj/aFDM/9vW7f//
////qZrg/11Gxf9dRL7/p5vi///////GweP/kXrW/8m+8f+FddP/5OLx/9vW7v+Idtf/xcLx/4l3
1f/Qxen//////6uc4P9fRMb/e2XP/41+0///////+/v8/////v////3///////77/P/+/Pz/////
/////v////7/+vr8//////+QfNr/embP/7Ol5f9eQsv/+/78//z7+P/6+vz/+vv+//r7/P/9/vv/
/f39//v6/f/8/Pv//Pn7//r8+f///f//YEPJ/6+l5P/18vv/UzfC/7Oj5v//////+Pr8//r//f/+
/v3//v7+//3+/P/+/v3//v/+//j5+v//////s6rk/1A6wf/49P3//////7aq5f9CJLr/3tfz////
///8+/n//Pv9//n8+//6+vv/+vn9//z6/P//////2tbz/0EluP+2q+X///////z7+P//////jYPW
/0IivP/Bsuz////////+//////////////7/////////wrbr/0Alvf+Ugdn///////z9/P/8/v3/
/v36//////+tnuD/Sy++/2hRyf+hleL/vbLs/7+06/+il+D/ZlHI/0gxvP+uoOP///////z7/v//
/v7//P77//v8/v/8+fv//////+rl9/+Zh9z/ZUzG/1I5wP9SOML/Z0zJ/5uL2v/p5fn////9//v8
+f/9/f7//v/+/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAoAAAAGAAAADAAAAABACAAAAAAAAAJAADDDgAAww4AAAAAAAAAAAAA
//z///v+/v/6//r//v/3//r8+//5/Pz////+//7////g4/P/sajn/5OC3v+HdNL/hHLU/5OC3v+0
p+j/5N33///+////////+vz7//T8/f/8/v/////+///+/////////v3+//v//P/8/f3//fj8//37
+//8////ycXx/3xl1f9FKLv/Nhmw/0Aiuv9LL8H/SzG9/0Altv84GbL/Ryi2/3xjz//LxPD//P3/
//r8/P/8/fz//v/6/////P///////P/7//3+/v/++f7///79//Ts/v+Jd9b/KRW1/zsdwP9/aNf/
uKvp/9fQ8f/i3vf/5OD3/9vU8f+6rur/fmrU/zsgt/8qGbH/jHrU//fu/f/+//z/+v36///+/P//
/////v36//35/v////v/6ur5/2lUxP8tC7H/e2bN/9nU9f/+/v7/////////////////////////
//////7//fv//9vS9/95ZtT/LAm5/2tUyP/s7ff///7///75/////////vz+//38/f/y9fz/aVbH
/y4QtP+hkuD///n//////////v3/7en5/9LG8v/DuO7/x73t/97S9v/48/7////+///++v///f7/
oJLm/yoQtv9tVsb/9u7+//79+//+/v7/+Pr6//////+Tftr/Lgu1/56N4f/////////+/+Pg+v+Q
gN7/TzbE/zUXvf8zEsH/NBS9/0EjwP9rU8z/uKzm//j2/P/9+/n//////52M4P8vDLH/k3/X////
///+/v3////9/8/O7/83Gbj/eFrX//z4///+//v/19bv/0s3uv8tD7//XkXP/5SI2P+unu3/oJLd
/3Zi0/9EJMP/Mg23/3lkyv/29f7/+f37//76//96Ysz/OByz/9bP8P///////////4Jx0v82G7j/
1c3y///////9//3/19Tt/15Otv+kn+L/9fP////+///+//////////z+///e3vL/g2fU/3tjxv/5
+P7/+//5/////P/VzfT/OB60/4hz0f//////7OT5/0guuf9zYcv///////z5/P/9+vn///v7//j3
///+////+vj9//b49v/4/Pj/+fr6//38+////v3//fj///z5/f///P7///v///78/f/7/v//dWLT
/0wqwf/q5vr/xr3q/zMXvP+uo+T///////r59//9+/z//v77/////v/////////8//36+v/6+Pv/
+/r8//389/////3////////////9/vv//Pr7//rz/v//////saXq/zgauP/Ct+n/mITY/zMdvP/Q
yPP///////b6+P/+//z/3tz3/7ip5/+xouf/z9Ds//v+///6+fj/+/z7//n7/P/Oy+r/sKLn/7iw
6P/i5Pf////6//j49///////08vy/zcgs/+Xhtv/e2PE/zwtu//h3vX////+//r///+2rdz/PyO/
/zUQwf8yEcH/Nxq9/5F90v///P7/9fP6/4Ft0v8zGLr/LxC//zERv/9LLsD/w7fl//z//f//////
59v1/0MswP97ZM7/fGXC/0IqwP/i3Pj///7+////+/+gk83/VTi7/7Oa6/+5r+r/YkrM/3dkxf/7
//v/8vL5/2xRxP9uVNP/u7ns/6KU4/9OMr3/sZza/////v/+/v3/5t/1/0YrwP97Ys7/k33V/zwj
tP/V0PL///////j5/P/4+fz/8PL6//////////3/8/n7//b4/P/9+/r//fz4//f3+//2+fv/////
//7+///u9fn/+/r+//v79/////r/2c7z/zshtf+VgNr/uq7q/zkbtP+zrOL///////r5+//8/vz/
+/75//379//79/r/+vv9//z6/P/++fz//vn+//36/P/8/Pz/+/r7//399//9+/v/+/v8//j4/P//
////vqjt/zUbuP+8r+b/4uD2/0gkwP9+atn////+//z79P/8/fr//P76//37/f/9/v3//P3+//3+
/P/+/vv///7///37///9/P///f/4//79/P//+/3/+/72//r8+f//////hmnY/0IovP/h3/f/////
/31h0P8+IMD/3dv0/////P/5+fz//v////r+///6/v///f/9//3//P/8//z//P/6//z/+v/9//3/
/f7///z//f/+/vv/+vj+///////g3fX/PyO6/3pi0f/////////+/8m87P8wFbP/hm3W///////3
+vv//v79//v//f/7//v///79///+///+/f7//v79//79/f///f7////+//7//f/7/fz/+vv8////
//+GdtP/KRO0/8zC7f//////+Pr5///8//+AatH/MhC2/7Wn5P//////+Pv7//r6+//9/vf///79
//3+/f/9/vv//vz9//77/v/+/f3//v77//37/f/49/n//////7Km5f8uE7D/fWvR///7///+/v3/
+/n7////+f/p5Pn/Uj+8/zcctv+8qur///////78/P/++vv//fv+//v9/f/5/vr/+f74//r++v/5
+f7/+vf+//79/f//////tK7n/zcZuf9bPr7/7Oj3//7//v/+/v///f35//369///////1tfz/003
u/81Ebr/k37b/+jp+/////////7+/////P///v////7//////f/+//3///////Ln+/+Ugt3/MxS7
/1I6vv/d1PX///////n8+P//////+/7+///++f/9/Pj//////+Tc9f9wWMf/LA6x/08zxP+Wi9n/
zsvx/+fj/f/z7v//8+///+no+//Pze//lonb/080wP8qD67/clvN/+Td9//+////+vr+///9/v//
////+//8//39/////vz//fn6///+/P/49P7/t6bl/2RHw/86GLf/Oxy7/0syxP9WQcL/WULB/04z
xf87HLz/NRqy/1tKw/+wq+L/9/X///7/+f/6/fr//P3////+/P////7//v/4//r+/P/7/P///vz9
//v4/P/5/Pr////+//Ty/v/Fu+//lYbW/3Vexf9fRsb/XkXI/3Vbzf+ahtj/zsHs//fz/v//////
+vr8//b59f///vz///z///z//f/+////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAKAAAACAAAABAAAAAAQAgAAAAAAAAEAAAww4AAMMOAAAAAAAAAAAAAP/8///9/v//+//9
//v/+f/9//f//v/7//r9/v/7/P3//vz7////////////9fn9/9fU+P+9svL/raHh/6aY3f+klt//
qp3j/8C08v/b0vn/+PP////////+/v///vr9//z9+//3/vz/+P3///7+//////////7+///9////
//////v///z+/v/5//v/+//6//38+P/8+vn/9fr5//n+/P///f//4dj7/6aZ4v9tXcL/SjO2/zod
uv84GLz/NRe3/zMXtf83G7r/OR23/00zuf9zXMT/qZfc/+HU+//++v//+vz+//P7+//2+/z//f/+
////+/////3////////////9/v7//P/7//z//f/++v///vf///z2/f//////5OT9/42H3f9MNMD/
NRC//zYRu/9JK7v/X0a//3dizf+Db9X/hXHT/3hlx/9iSb//Siu8/zUSs/8zELL/TjS9/5KM2P/m
4/3///z+//77+//+//v//P/6//7/+v////z///////z/+v/9//3//vz////6///8+vr///v//828
8v9cRsH/KBS1/zQYvv9jSs7/no/e/87F8v/q5P3/8/P9//b1///49///+PX+/+zn/f/OxvL/oJHi
/2FLxf81HbX/KBWy/15Kvv/QwPD///////v++//7/vv//v38///+/v///////v75//77/v/9+f3/
+/z5//7///+2reP/RSm1/zUSuP9TPLr/p5vi/+rn/f/////////+//79/v/8+/7/+fz6//r8+//8
+f3///z7/////P/+/f//6+T+/6ia5P9RO8T/NBG+/0Ymuf+6seX///////r6+///+v////z/////
///+/vv//vr///v7+v/9//7/ta/n/z0jsv82Grj/b1rJ/+LS+P///////f36//z6+P//////////
///+///7/P///f3//////////v////v9//v2+f/8+P3//////+HY+v9uVtL/NBfG/zomr/+5r+P/
//v///z4/f/+/P3///////79/v/7+vv//f79/87I8f9GLbX/OBa//3Zlzv/s6P7///r///r1/f//
////8O77/8e/7v+djN3/hWzX/3xn1f9/a9L/knvY/7in6//k2/f///////z89//7+vP////4/+7s
//9zZs7/NRa6/0stuf/Sw/P//vz9//z9+v//////9/n8//v/+f/u6f3/ZkrH/zgUvf9qVMj/7ub/
//z7+v/5+vv/+Pj//7Ws6f9pU83/QCa//zMXvf8uD8D/MQ/D/zERwf81F8D/PSG9/1g/wf+Tgdb/
49z4///+///59vr//P36/+rk/f9tVMn/NRS1/2dPwv/s5f3//f39///////6+vj/+////56W2P81
Fbr/VDLK/9nM+P/+/v7/+Pr3//T0/v+NgdP/PiW//zMVxv9EJ8r/ZVTE/4d81f+YhOf/innU/2xa
w/9NLcv/ORXB/zwavv9ZPsH/xb7q///+///2+fv//v///9zO9P9VOrr/NRe1/6KV2v//////+/z8
///+/P/m4fr/UkC9/zMXuf+gjeH///3///j5+v/5//v/4uT3/0U2ov8wGa//cmTN/8e78v/y6v//
/vz////7///+/f//8fH+/9PO9/+Yjdb/VjfD/ywErP+Je8T///////f9+f/6/ff//////6OT3/81
Grb/WkS4/+vl+//9//7//////7Ck4P80Frf/WULD/+bj9////f7//vz+//r6+f/8+P7/xrzn/6Wg
2f/x9f///v////b4/f/1+vf/9vn5//n5///7/f3//v/6///////Ux/T/p5He/+Pe9f///////f78
//7++P///v7/4t77/1tHw/81FLT/tqTm////////+v//eWbJ/y0Rsv+ShtT///////z6/P/9+fz/
/vz5///7+f///f////////r8+//49v3/+fj4//v+9v/7/vr/+/z5//79+v/++v7//Pb7//36/f//
/////f78///8/v//+/////z///37/v/7/v//lYre/zIMvv98Zc7//fv//+7r9v9WPMb/PCO+/8W9
6v//////+vr2//36+//9+/3/+f35//f59//7+Pz//fn+//36+v/++vj///n8//v5/P/6+fz//v35
//z79//+9/7//vb+//z4+v/7+/r/+/v5//77/f/99///+vX+///////HwPH/QSHD/1c/vP/n4fr/
zMHr/zsevv9QPcr/4tr6/////v/5/Pf//P34//7++v///////vz///bv///18f//+v78//r+/v/3
+/v/9vj2//v6+//6+/v//f74///+///28f//9fT///3////7//z/+fz1//z6+P/59v3////7/+Xf
+v9UPcP/QCiz/8e98f+nkdj/Mxu6/19Uxv/07/////r8//X5/v/3/Pf/9fb7/62n6P90Xs3/a0/O
/2hPy/+EeM3/087v//76///8+fr/+vz4//f4///EwOv/fW/I/2hPzP9nUMr/fGrP/7646//59/7/
+fz0//r8+////vz/9u7//2dWxP8zGrX/p5jg/5R9yP8vGrH/bWbP//v6/v///Pr/8/n+//n8//+S
gcn/Nxy7/zoVyf83FML/NBTH/zcYx/9FKLP/wLLo/////f/9/Pz/qpnk/z8kuP81GcL/MRPE/zIU
wf84Fsj/QCK4/6WS1//8/f7/9fv6//77////8///emrO/zIUvv+UgdL/lYDH/zQZtP9zYtb/+vf/
//76/v/2/ff/+P34/3VhtP83GKz/eFbS/7Gd6f+Xi9v/WT7N/zUVrP+qn9j////+//z9//+UgdL/
NhGy/2RI0f+gmuH/pJzg/2dNzP80E7D/iW/E///6///29/j//Pr+//72//97ac7/NRLB/5SB0f+i
jtT/Ohy1/2dTyP/28////vr///f4+v/+//v/5uL1/8G+5v/26/////3////////d3vb/xcHp//T0
/f/6/PX/+v32//Du+v/Cuej/5+P8//z//////v//6eT8/7295//u5/r///v5//r89P/9//f/+PL/
/2tawv82GLb/pZLd/7+w6/9BJLb/WUe8/+jl+v///P//+Pb+//v7/v/8/f7//P/+//78+v/9+Pr/
9/j3//r++//+//7//fr///35+//9+fn//fz7/////v/5/vj/9/v7//n6/f/7/fj//v/8//38/v/7
+v3//P35////+//t4P7/WkLJ/z0jtf/GtvD/4Nv5/1M2wP9FKrj/yMTq///////8+vz//f37//v9
+//5+/j//v33///89//9+vz/+fj+//j3/P/9+fr//vr7///6/v/9+P7/+fX6//37/v/+/P3//v74
//7++P/69Pz/+/r9//n7/P/6+f3//////9bD8/9EJsX/Tzq5/+HY9//3+P//clnK/zcPwP+ekuL/
/v////v89P/9/Pb//f78//v++P/9+/3//vz8//3//f/8/f///v3/////+//+/fv///7+//79/v/9
+v///v3///7/9//+//j//v3////8/P/8/vb/+f70//z7/v//////qZLl/zMSuf9uXsf/9/b/////
//+ol9r/NgrB/2ROzf/t8fz//v35//369//6+/v//v/8//v9///7/f//+//+//v//P/9//v//P/5
//3+/P/9//3//f/8//z//P/8/v7//f/9//z+/v/9/f7///76//v6/P/9/vv////+/+/s/P9nS8r/
NA+7/6KU3////////////+LZ9/9OLb7/OR67/62j4v///f//+vn6//r7/v///v///P////n+///7
/v///v7///7+/v/+//7//P/7//z/+f/8//n//f/6//7+/v/+/v///f/+//z/+P/9/fz/+/n///z6
/v//////s63h/zcgtv9NM7v/4tj4///////6+fb///n//49+1P8wFbX/XkDH/+vd+v/+//3/9/n7
////+//8////+v/8//z/+f///vv///3////+///+/f///v3+///+/v///P////z//////v////7/
/v7+//v+/P/7/fv///3//+7h+v9cSML/KBO4/45/2P///////fz7//j7+f/9/Pz/4tn5/1c8v/84
FL3/gm7O//z2///7+/n/+P37//v9/f/7/fj//f73///+/f///f///v/8//79/v//+/////r////7
///+/f3///75//7++//+/P3/+ff6//j69v/39P//gW/O/zMZtv9RPL//49b7///////+/v7/+/r+
//v79////v//uKrl/zofsf88H7r/k4HV//33///+/P7//PX+//76/P///fv///7+//3+///5//n/
+f/3//n/9//7//f/+/78//v8///9+v7//Pv///n6+v/7/fv/9/n//4+C1/85Grv/PiKv/7ux4v//
/f///Pr+///////9+vz//v33//z7+f/7+v//k4zV/zIasP87Hbz/jXXZ//Pi/////f7//fz6//36
/P/++/7//v3+//z8///7/f7//P78//3//P/9/v7/+/n+//r2/v/9+/7////+/+3q//+GeNT/OR68
/zkYtv+eidn///z///f6+P/9/v3///////3++f/9/Pb//vv6//v6/v/1+f//joXR/zcYs/87FsD/
aFDI/8G77v/09////v///////f////j///z8//75/v//+v7///79////+f/+//v///7///3z///L
vO3/aFLL/zsawf85HLb/lIbU//r1///8+P7/+vz5//z++v//////+/7+//3++/////f//v37//v6
/v/8+f//q5nf/0gttf8wFLT/RSnC/3lo0v+4tOX/5Ob6//b1///8+v/////////////+/v//+fv+
/+bn+P+5sOX/f2nT/0Uouv8wFLX/TDG8/6yb4//7+///+f79//v8/////P7///7+///////5//3/
/f3////++v///vr//vn9//v4+////f//0sXv/3dgyP9DILf/NBC1/z8huP9ZQMb/dWLZ/4t84/+X
iN7/mIrd/45+3v93ZdX/WEHH/zkguP8rErH/OCS1/3Bmwf/RyvP///z///r8+P/5//z/+v3////9
/f///v3///////3/+P/9/v///fz///79/f///Pv//vv5//n5+f/+/f7/+fP//8e66v+DbM7/VTXD
/z8euv82GLP/Mxay/zMZsP80GK//Nhe2/zgXu/8+Hbr/VDq7/4Bxzf/Aue//+Pf///39///4+vj/
+/70//3//f/9/P///v78////+////////v74//z/+f/5/f7/+vv+//78/f/9+f//+/r+//b6+P/4
/Pn///////n5///d2fn/uK/k/5uM0/+Ebc3/c1zR/3Jc0/+AatP/nYrZ/7+x5v/p3vj///v////+
////+f7//Pn9//X4+P/6+/f///79///8///8/f//+//+//////8AAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAAAw
AAAAYAAAAAEAIAAAAAAAACQAAMMOAADDDgAAAAAAAAAAAAD//f///v3///7+///8//7//P/9//z/
+//+//r////7/////v/9/////P////3+/f///vz///////3+///5/v7//P////3////49///7+r/
/+Xb/v/Z0Pb/1cvy/9LF8f/SxfH/08by/9nO+P/n3f//8+r///r0////+v///Pn+//r7/v/+////
///////+///+/fz/+/78//n+/v/8/////f/////+///////////+///+/v/+/f//////////////
+v////z///v+///5//z/+f/6//n/9v/7//L//v/1//v9+P/1+vr/9fz+//z8+///+/r/+/f+//78
///7/P//4eX7/7u75P+RidP/bl3M/15Jyv9UPr7/TTm2/0s0uf9IMrr/STW7/089v/9fTMf/cmDL
/5WH1f/Atez/5t7+//75///9+P//+fH9//73/f/9/Pv/9/76//L++//x+vz/+fz+//7///////7/
///9///+/////f//////////////+/////z///v//f/6//v/+v/7//z//P///f3//fn5//v4+f/7
/fz/9vz6//X6+v/8/v7/8uz//8q8+/+Ugd3/WEK2/0Epq/86IK7/ORy0/z4ev/8/HcT/Px7D/z8g
vv8+H7v/QiPA/0Ikwf89Hrz/NRay/z8is/9GKq7/XUSx/5R/1f/Kufr/8+f///z4///19f7/9/r/
//f8/P/3+/v//P3+//7//f////r////7/////f////7//////////////f///f79//z/+//7//z/
/f7///75/v/99f7///v////7///69/z/9vj6//Dy///Ew/f/e2/Q/0cutP88G7z/RB/I/0cjyf9E
JL3/QSWz/0gstP9WOr//YUfI/2JJxv9iSsX/XUW+/1M7tv9KL7P/Ria2/0cmvv9GJMD/Px23/zsb
sP9JLbX/fnHP/8jG9v/w7v//+vb+//v3/v///f3////9//7/+v/9//r//v/6////+v////z////+
///////8//z//P/7//z//P/8/v7///z////5////+///+/f6//bv+v/+9///6N7+/4+F2f8/Mrn/
Lhm0/0Ahy/9CIMz/QSG+/1E0uf9zXMr/mIfd/7Cj4f/BvOb/zsrr/9PK9P/Wz/X/1c/w/8jB5/+y
pt//nIzd/29ayP9PNLr/Ryi//z8fv/9BI8T/MR+v/0M6r/+Vi9z/6d79//30/v/99vv///39//3/
+//7//v//P/6//7++v///vv////////////8//r//f/8//7+/v/+/P////v////8/v/+/Pv/+/r7
//jz/v/Tw/z/cFXH/zQcq/83Ir//OyPD/zwiu/9eR8P/mYrg/8rC8//m4fz/9/L///v3///9+///
+/r///r6///6+v//+/r////9///++///9vP//+jj/f/Px/j/lojc/1pHuP8/KLD/PCfC/zMevv82
Hqj/clvF/9vK+v//9v//+vn9//3/+//7//r//P39//78/v///P7////////////+//j//fz7//77
///++v7//vv9/////P/y9fT/+fn//8S78P9QOa7/Ohi0/0cmx/88I7D/Tzu1/5uO4P/Z0f//9fL/
//39///9/P7/+vr8//v7/f/7+v3/+fn9//n7+f/6/fz/+/r9//v4/f/9+vv//Pv4///+/f/6+v//
9fH//9/V/v+cjd//UD27/zceuf9GJsz/Ohi0/1E3sP/IvPH///////P3+f/8/fz///z////6////
/P/////////////+/vj//vz9//74/v/69/v//f34//b79//5/P//vrbs/0Yypv89Ibf/RyfM/z0f
rP+CbMv/08fz//37///7/Pr/+/v6///9+//++v3//fz9//z7/f/8+v3/+/v9//f7+f/6/Pv/+/v8
//35/f/9+fz//fv5//79+f/9+vv/+fX///rz///88v//1cr4/4Fv1f88Hrf/SCPY/zobwP9IN6r/
vbjn//n5///18/n//vr////3///++//////////////+/fv///3///76/////v7/+P34//X6///B
u/D/SjWy/zgZt/9GKcb/PSir/5+N4f/z4////vb+//j0+//+/fz//v36//j29v/8+/r//v79////
/////v///fn///n5///8+v////7////////++v//+fT7//z4/P/9+Pn///v9//z5/f/89vz///z+
//Dq//+aieT/PSS4/0Io0f82Hrf/RjSn/8u+8//78v//+/b+//79/f/9+/v//////////////v7/
/fv+//z8/P/3+Pn/+Pr//9jU+P9RQK7/Oxu6/0YlzP9BKa//qaDn//Pr///+9P7//fT+//77/v/+
/f//9/b9//z7/v/z7v//29H8/7qs6f+ijt7/mYXg/5KB2/+Vhdn/oI7a/7mn5v/ayvz/8eX///33
///7+f7/+vv4//r58v/8+vT//f70//v7+P/38///pZvo/z8ss/9DJ8n/Oxy2/1lAt//dzfv/+PH9
//j3+//9/vj////+///////6+v7//P38//v8+//y8/j/7eT//3Jexv89ILb/RybJ/0Mns/+pmun/
8u////bz+v/++f//+vf+//f2///5+P//5+P//6yi4v90Y8T/UDm4/0QmvP88Gr//PxzE/zweu/9C
IsD/QB+//0Iiu/9VO8L/cF3B/6qe3P/o4f7//Pr+//v8+v/+//r//v32//z79f/2+ff/9/f//6KX
5P9AJrD/RyTJ/z0ds/91X8f/7+T///Xz+f/8/fr////////////3+f3/9/v4//n++f/7+P//pJDk
/zoXr/9PKNT/OBys/5KB2//07f//+vb9//r6+f/4+/r/+////+7v//+zqO7/YUzD/0Imv/89IcX/
QyjL/0UszP88Icb/QCLO/z4ezf89Hsr/QyjL/0kuzf9FKcj/QCPA/0Mnuf9cRLr/opHi/+vj///8
+/7/9/T9//77/v/6+Pn/9PH4//Pr//+Vgd3/QCOv/0Ymwv88Iar/pZTh//Tu///6+fz/////////
///9/fv/9fn4//T5/P/V0fX/UTu1/0Yiyv8/GcH/fGPT/+jd///6+P//+fr5//r79//19/r/6Ob+
/46C1f8+Ka7/PiPF/0co2f9CI8//PCK6/0Myr/9ZS73/bFrP/3FX1P9oU8j/UkCz/0Qvsf9AIcD/
Qh7M/0km0P9FI8T/PyGw/3Fbx//Ox/H/+vf///j2/f/7+/3/+Pr9//f0/v/u4f//eGLE/0Ajsv9E
JcL/Tjmy/9vR+P/69/3/+/z9//7+/v///vb/+fj6//Du//+LhdT/Mh+s/0Aixv9SM8L/y7j4//72
///5+Pz/9vz2//b7+f///f//npXW/zIcnv9NMdX/QCjI/zcgs/9fSMj/mobl/8a76v/g2vr/6uP/
/+7h///q4f3/187v/7qu6f+Pd+b/XUHG/z8jrv9HKMD/VC/X/zoXsf9rXrT/8O3///7+/v/4/v7/
+P/5//v9/f//9///08Ty/1U+tv9DJcb/Nx+r/5SH0v/79v//+fv7//z+/f/8+v3//fn//9fQ9/9L
OLP/PyLD/zsgtv+RgNv/9e3///76/f/7+fv/+//8//T5+P/2+v//mpnN/zUmlf8wG6b/RTeu/6CX
5v/f2P7/+vL///nz///++///+vf9//n1/v/8+v//+Pv///f8///z9v//4eH8/62l4f9cQbf/QRi5
/zgRrf9jUqr/7+n//////v/5/v3/+v/2//3/+f/++v//9+///5KC3P8+JbX/PiO4/1dBsf/e0vn/
+vr///z9/f/99v7/+fP//6GU3/84HbH/RifJ/1M+uv/TzfT//fr///n2+v///P/////9//T39f/2
9Pr/8Or9/5iNzv90arr/xMLv//f7///19v7/9/f+//f5///3+vr/9fn2//f4/P/6+v//+Pn+//n+
+v/4//j/9v33//r7///g0/z/kXfX/4Zsyv/Mw+r//vn///79/v/9//3//f/3//7/9//9/P3/+PX/
/9PL+P9VQ7v/RCfC/zscq/+jjuL//vr///b4+///9/7/8uj//2VTtf88H77/PCK3/4N3zP/49///
+/r9//78/f/++/7//Pv7///++//+9/r//vb///v1///59v//9/v6//X7+//5+///9PX9//L29//2
/fj/9v34//v++//7/P7//fv+//z7/v/9+/z//fz5//b19f/28/n///b///vz///8/v3//Pv9///9
///+/f///v79///+/P///v3/9/j9/+/u//+Jf9D/PyG+/z8awP9vU8b/8+z///j6/v///v//z8T2
/0Uurv9AI8P/RjKw/7+17f/8+v///Pv+//77/f/7+Pr///v///v69P/+/vb//Pn+//n2/P/4+Pv/
+/z8//37/f/69vz//Pj9//389v/9/vX//P34//z/+f/6/Pf//P33////+v///P3///j///74/v/8
9v3//fj7//z5+//7/Pj//fz8///7////+f////v////7/////P//+/r+//f7//+9uu7/UDTH/0Eb
yf9HKrL/0cb3//39////////rJ7f/z0guv8+IsX/YlK8/+Td/P/7+f///Pr5//v7+P/7+vr///r/
//v7+v/9//n/+v34//f4+P/7+fz//Pj9//34/f///v7//vr5//36+P///Pz///n8//z8/v/5+fz/
/v38//79+P///vr///v+//72////9////vf8//77+//+/fv//v78//78/P//+/7///v///z1///9
9////Pv+//b8/P/g3/z/bVTT/z8dw/89IrL/rJ3e//77////////jHrU/zMUv/8/Jsf/gXPS//Hq
////+////v/5//r79f/7+/n///7///38///6/f7/+v36//n7+f/8+P7//Pb+//r2/v/5+fn/+fr2
//78/v/69fv//Pj8//b2+v/49vz//fz///z7+f/5+vD/+/z2//z4/f/88/3/+/T+//v4/v/5+f3/
9/z5//j89f/8/Pf//vz8//r2/P/48/z/+/r+//v/+//08///h3Lc/0Inv/87IbT/injO//bx///r
4/v/aFLA/zIUwv8+KcD/oJXn//rz////+Pz//v77//f89//8/fr////2//v7+P/8/P7////////8
///48P//8er///f0///5/Pz/7vn3//P7/v/3/fz/9vz3//X48//7+/n//f39//j5/P/1+fT//f/7
//7+///38v//9PD///b3///+////+f3///L4+P/3+vb/+/zz//37+f/59/v//v3///n89v/+/P//
o5Pn/0Artf84IbT/alXE/+bg///WxPD/Ujq2/z0ky/86K7L/tK3r///6///+9/v/+fj7//b7/f/1
/Pj/+Pnx//z9///g3///qp3l/35qyf95Ycv/dFzL/3Viyf+UidH/0s/3//r5///59/3//Pn7//37
+v/8/vn/8/f3//T2/P/08///vrrs/4p+yP94Y8z/b1rH/3dmyP+Jec3/ubLu/+7t///39/3/+Pj1
//r99P/6+/v//f39//37+f//+///uazq/0MwsP83ILr/Vz28/9TL9v/Grub/Qimp/0Ityf9BNrX/
xcHv///9///++vv/+/n///T4///x+fr///z//8G76/9bUsH/OB65/0Igx/9BHcj/Qx/K/z0cxf86
H7X/TDeq/5F/z//r3f///fX9//75+//5+vj/+fj8/9vT/P94a8X/QzGr/zsht/88Gsb/QB3K/z0c
wv89GsL/Ri61/3JiwP/Wyvj//Pr9//T68//4/fz//P/+//77/v//+f//y77s/08+uv8+Jsj/SCq2
/8G26f++qd7/OyWe/z8rxf9GPL3/y8nz///////++vb/+/v///D4/P/5////3M/w/1dBpv88ILr/
TinX/0sm0f8+HsL/PB7E/z8k0f9LLt3/RCXO/zQYpv+Ug9L/+ff///r78//39/X/7eP//3Nayv88
H7b/RijP/0Ur0v87Icv/NhvA/z4ixv9IKNT/SinV/z8gtf9sU7f/6uD7//j6+v/1+fr/+v39//33
/v//+P//1Mft/1VDvv9BJs//Ph2y/76y4//Aq97/Pieh/0Mpx/9OOsX/zMb0///////9+fr//Pv/
//L69P/6//n/xLnf/0Eqkv8/Ibn/RB+9/1c1vf+Mctz/lILe/2JQwP87Ibb/SCXQ/zYVqP96abv/
9PX///r99//2+fj/5d79/19Gs/84FLP/RyLM/0Uruv9uYsj/l4/j/3Nmxv9KL7b/QB/D/z0buP9U
NaH/3Mvz///8/v/19Pj/+vz9//z4/v//+f//1szw/1VAvf9GJdP/Px6z/76z4//DsOL/RCum/0kq
yv9LMsH/x77x///9///9+P7/+/n///n+9v/3/+///PT//5aIzP9NPaD/jnfY/9/H/P/35/7/+fT/
/+fj+v+0p/D/Yk28/2NPsf/Pxe//9/n7//j79//3+vn/9/X//7qs6P9cQ6//cljK/8e4+//p6/z/
9Pv//+3r/P/Mu/j/eGXO/1I/qv+rlt7//O7///74+v/49/f/+vv4//z8/f//+v//z8bu/044tv9E
Jc3/RiSz/8C16P/OvO3/UDev/0cpw/9BK7L/urLp///////++/7/9vP9//j6/P/4/fn/+fT9//X1
///p7v//+PT///71///79f3/+vv3//j++f/2/f//6vD///L0///5+v//9/n2//z99P/6/PP/9fj1
//3+///p5/7/9PL///b5/v/x+fn/9//9//P2/P/59P//8PP//+fu///69////vn7//v59P/8//T/
+//z//399f///P//wrXp/0Qyrf8+JLz/VDa5/9DE9P/g0/r/Y0u+/0Ajuv9CLbD/qaDi///8///6
9/7//Pj///f3/v/9/v//+/r9//f6/f/w9/j/+Pj5//36/P//+/z//Pn5//f69v/1/fn/9//7//b7
+v/8+v3///r///v5+P/9+vn//fz7//j69//8//v/9/72//X89//1+/j/+/7+//j6/P/5+vv/8vv1
//X+9//6+/z//Pn+//39/f/9//j//f34//79+v//+v//rpnq/0Qtuv86Ibj/aU7E/+nd///w6v//
gGvS/zwdtf9HL7n/i4DO//b0///6+f3//Pn+//r4/f/6+fv///79//n8+v/2+vn/+vr2///9+f//
+/v//PX5//v5/f/3+vv/+v7+//P09v/8+P7//ff9///7///89vz//vn+//79/v/9/Pr/+v34//v+
+//8/v///v3+//7//f/+//b//fz3//f4+f/9/P7//Pr///f3/f/7+/7///z9///8/v/98v//kXTj
/0Qpxf83ILX/f2jK//bt///9/f//no7b/z0dtv9GJsL/Zle6/+Xk/f/4+v7/+/z+///+/f/9/fn/
/v79//v++//8//v//f74////+P///fX//vz4//38/f/7+v7/+fj///z6/v///Pv//Pj2//77+//+
+/7///r///z2/f/48vz//fn+//78///+/P3//Pv3//7+9/////n//Pj7//z0///7+fz/+v76//r8
/P/6+v3///z////4/v/25/7/c1PO/0AkxP83I7D/oJDW//v3///+////wbbu/0Mksf9HIM7/Ujq+
/8jC+P/3/P7/+vz4//399v/6+/P//v38//v++//7//f//Pz6//77/P///Pz///78//39/f/8/f//
+/v///78/////vz////7///8/P///f3///3///77/v/++v///vv///79/v/+//j//v/1//7/+f/+
/f7///3+///7+//9/vr/+f/w//n+9v/9/P///vr8///3///WxPv/XT3H/z4gwv9BLbD/w7nu//z9
///4/P3/6eL//15Dtf9GGtD/QiHD/5mO3//4/v//+/77//388//9+/L///7///z++//8//j//f3+
//z7///8+////P7+//z//f/8//3//f/+//7//v/9//v//f/5//79/v/+/v7////+//7//v/9/v7/
/fz///7+/v/+//n//v/4//3//f/+/P////78////+f/9/vr/+v/z//z/9//+/f//+/r9//72//+e
idz/QB26/0Qjxv9UQbb/5N////r+///3+v7//Pn//5B8zf8/FcD/QhvL/15Mwv/f4Pv/+/z+//z7
+f/+/Pf/+vn7//n6+v////3//P/+//v+///6/f//+/////r//v/6//v//P/6//z/+v/7//j/+//6
//z+/v/8//3//P/8//z//P/8//z//P/9//z+/v/8//7//P////z+///8/f/////8///9+//69///
+/39/////f/9+////P37/+Ha/f9hSsH/RyLK/zkYuP+Medv/+vf///b5/f/8/P7//fz//8/B8v9G
JbH/RiPN/0Aptv+jmt//+vP///n0/f/9+vn/+fv9//v8/v///v///f////v+///5/v//+v7///v+
///9/v///v7+//7//v/+//7//f/+//z/+v/8//j//P/4//z/+P/9//j//v/7//3+/v/+/v///v//
//3//f/8//j//v/5//78/f/69////Pr////9/v/+/P3//////6qj4f8+KrD/RinH/0csr//MvfT/
/v3///n7/f/7+/r//fv8//Xr//92YMj/PCC4/zogvP9dR7//38/8///2///+/Pv/+Pv///v9/v//
/v7//v////v////6//7/+v/+//3//v/+/v7///7////+/////v///v////z+/P/9//v//f/7//3/
+//+//z//v7+//79/////v////////7//f/8//n//P/7//v+/f/8/f////z///76/v//+v//49n5
/15RuP87KL7/LRau/31rzP/07P///v39/////v/5+vX/+vf7//vz///Dtu7/RDCw/0Akxf8/Hrr/
knjZ//rt///9/Pr/9Pf8//r8+/////j//v/+//z////6//z/+//5//3/+P/+//n///78///8/v//
/v////7///37///+/P////7////+/////P////v////9///////////+///////+/f///f7///v/
+//6//j///7///71/v//8f//kXzW/zojtP87Jcr/PCq3/8a69P///////fv5///9/P/4/Pj/+/v7
//f0+v/z7P//hXPQ/z0esv9JJM7/RSix/7en6f//+v//9/X3//v9+P/5/fr/+P37//v+/P/8//r/
+/71//3/+P///vv///3+///9//////7//v/9///7////+/////r////5////+v////3///7++//+
/vn////6//39+f/+/f3//vv///b19//9/vn/8PD0//r1//+4q+n/RC6v/0Mqxv82H7X/fmvR//Xo
////+/3//v7+/////v/6/P3/+fv5//39+//9+v7/18r6/1tDuf8+Hbv/QiPB/1I9tv/GuvD///n/
//j3+v/8/////P3///z6/v/8+/v/+/v3///++v///v3///3///3+/v/9//r/+//4//z+/P/8/vz/
/P38//38/f/9/f3//f3+//z9/f/+/Pr//v38//79/v/9/Pv/+ff5//z8/f/y9fX/9vf+/8jA+P9M
OLP/PCG6/z0ktf9WRLH/39P///7z///++f7////////////8+v///Pz6//799//39fX//fj//7ir
6v8+KKb/PyPA/0IlvP9aRbn/zcD0///2///99v7//fX///73////+v7///z8/////P////3//v7+
//v+/v/5//r/+P/2//j/9f/4//X/+f/1//r/9v/6//n/+v39//v7///9+///+vj///z7///8/fz/
+vz7//X5+v/2+f7/y8f3/1M/tf9BIMD/RSLD/0UspP++tOr/+/j///f0/P/++//////////////9
+f///Pr4//7+9v/+/fr/9/X8//b0//+Zktr/NCKj/0Qoxf88Hrr/Vj+9/8ey9P//7v///fX+//r1
+f///vr//vz5///7/f///P///v3///39///8/f//+/3+//r+/v/6//3//P/7//z//P/8/v///f3/
//z4///79////vv////9///5+Pf/+vv7//f1//+7s+//VEK6/zsgvf9EIsj/PiCq/6GN2//+9v//
9vf5//n8+v/8/v7////////////+/Pv//f35///+9//+/Pn//Pr+//P0/v/t7///iIHS/y4boP9E
Jcf/PRvA/1M0vf+iiuT/59v+//v5/v/3+vz/+fr7//78/////P7///77////+////f7///v///77
///+/P////3//////v////7//v37//z7/P/7+f3/+fX9//34/////v//6eH9/5+S6P9OOLj/Oh29
/0Yoyv83Hqf/loPa//To///79P///Pz7//n89//6/vn////////////8/fn//v74//z58//+/Pv/
/vn8//z8/v/1+f7/7O3//5OJ1P82HaT/RCDI/0Qgxv9DJ7X/cGDH/8C78//t7///8vX+//r9///9
//7//f34//3+9v/+/fz//vr////5////+f////v///79/P/+/vj/+/z0//3++f/+/f//+vT///bp
///LufH/dWHH/0Anuf9GJMr/RiTL/zggqP+XitX/7ur///n3/v/59f///vz+//n7+P/8/vj/////
///////7/f7//f79//7++v////f///34//79/f/6+f7/+Pj9//bw//+mluD/Si6s/z4gtv9AJMP/
PSG8/0s0vf99btP/vLTw/+Lj+v/1+f////////39/v/7+/v//fr8///7/v/++/3//v3+/////v//
//7///////j5///k4Pj/wrXy/4Zv1f9RNLb/PiG6/0Ekx/8+ILr/TjS0/6qa5f/y7v//+fz+//j9
/v/7/f///vz////9/v///v3////////////5/v7/+/7///7+/v////f////2///++//++v7/+/j+
//fz/P/89P//y7r0/2NOuP87Iqr/QiHA/0cjyv9AIbz/SDKv/25fwf+Vi9v/ubDt/8vD+P/b0///
6eP//+3l///s5f//6OL//9zW/v/NyPb/u7Xq/5SJ2P9lVsD/RzKz/z4kuP8/IsH/PCS5/zYjpf9s
WsL/x7j1//rx///6+v3/+P77//n//P/5/v///vz////9/v///f7////////////5//v/+/7+//38
/////f3////5////+//++fz///z9//z6+//49ff//fb//+fb+/+kkeL/WT60/0Efsf9FH8D/RCLC
/0Mjv/9BJLv/SC/A/1pFzv9nVNL/aFjI/3Nhyf9zYsf/cV/J/2hVyv9aRMX/SzLC/0Emvv9AJcL/
OyK+/zkjvP84JbT/T0St/52X2f/l4P3//Pf///f1+v/6+/X//P/6//n+/f/5/f///f3////+/f//
/vz////////////8//f//f/9//39///9+////v7////+/P///Pv//vv6//78+P/8/Pr/+ff6//r2
/v/48P//4dX9/5+M1/9gR7T/SCe2/z8avP9AHML/QR/D/z0fvv89Ib//QSfC/0Enu/9AJbn/QiS+
/0Mjw/9EIcf/QB3F/zwavv8+Ibj/QCqs/1tOtf+Yj+L/2tf8//r6///18/3/9/f9//7/+v/8//T/
/f/4//z+/v/8/P///v3/////+/////n////////////+//f//P/6//z+/f/6/P7/+/3///38/v/9
+/v///39//v4+v/5+Pv//v/+//X29//4+Pz//fz///r2///m3f//uKrs/4d10P9qVcH/Uz6w/0s0
rf9DKar/Oh6m/zwjr/88IrD/PSKv/0Ims/9JLrX/Vz64/21Wwf+LeMr/wbPr/+ng///48P///Pb/
//35/v/8+f3//Pz+//T28v/5+/T////7//7+/v///P////3///3+/f/8//z////////////+/vn/
/f/3//v/9//4/f3/+fz///r7///9/P3//vv///z4///9+v//9/v7//j9+P/5/fj/9/35//b7/f/4
+/7/+fr///b3///k4fz/z8bt/7uu5/+pleT/moLi/4t35/+MeOX/k37j/6WR5//Ar+z/1Mfx/+3j
/f///f////3////6/v//+/7///j9///6///++v7/+Pn7//b6+v/3+fb//v76///+/v///P////z/
//v+///5/v///v////////8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAoAAAAQwAAAIIAAAABACAAAAAAAAxEAADDDgAAww4AAAAAAAAAAAAA//7////+///+/f///v7+
//3////9//7//P/9//z//f////z////8/////P////7///////3////9/////f///////v////7/
///////+///9////+/////v+///6/v//9/n///b1///y8P//8e3///Pr///z6///8ur///Lp///x
5f//8eX///Hl///x5f//8Ob///Hn///z6f//9Oz///Xu///28f//+vX///v4///8+////f7///3/
//////////7////+///////////+//3//v/7/////f////3////9//////7/////////////////
///+/v/+/v7//v3////////////////////7/////P///v3///z+///6//7/+f/7//r/+v/6//j/
+P7z//z/9P////f//v/6//v+/P/5/f7/+P3///j8/f/++/f///v4///9/v///f///P3///f8///1
+///8vr//+rt///a2P//xb3//7Gj//+aifD/gnHa/3Rkyf9vX8T/aFXC/2dUw/9mVcT/aVjH/3Ji
zv+Edd7/oJHz/7an///Lvv//3tX//+/m///z7f//9PH///n3///+/f////7////7/////P///fj5
//j89//2/fj/8fz5//b+/v/1/P//+/7///3+///////////+/////v///v3///3////8/////v//
////////////+v////v///79///6/v//+f/9//n/+//5//r/+v/4//z/9f/9/vT//f71//z89v/2
+ff/8/j3//P7+//4/f7///38///9///79P//8+3///fx///z7v//1NH+/7Ct5P+Ce8T/YVaz/0Au
o/8xHKH/Nh6s/zwitf9AJrT/PSWz/0Amuf8+JLj/OyO3/zwlt/86I7X/NR+t/zMcpv80Hp//QC2i
/2dUu/+Le9P/s6Xt/+LV///16///8un///Tp///y5vr///f////9///9////+P/+//T//P/y/Pz/
7/b5//r9///8/v///////////P////z////+///+/////v////////////////////v////8///+
/f///P/9//r/+//6//v/+v/7//z//f////////z+//34+v/79vj//vz8//3//v/6//v/9/75//X6
/f/1+P//8+///+DW//+8rP//i3bd/1c/tf81G53/PCKr/z4isf9DJrv/SSrF/0opyv9GJMn/RCDI
/0Mhxv9EJMP/QyS//0QlwP9JKsX/TC3K/0ssyf9JKcj/SCfF/z4fuP9IKbr/PB6l/zoemf9dRLL/
inTT/7mm/f/r3f//8un///n3///z8v//8/T+//n8///2+vv/9vr7//r8/P/8/v7//v/9//7/+///
//r////7/////P////7////+///////////////////9///+/f///P/9//z/+//6//v//P/9//z+
/////P//+vL8//71////+f////v///76///5+Pr/8vb3/+zw+//q7f//29z//7Kr9v90ZMn/Ry6u
/z4gtf9HJcb/TSnP/0kmyv9HJsT/QyS7/0IluP9FJrf/Siu8/1Mzx/9ZO8r/UzfA/1M4vf9SN7z/
TzS5/0swtf9ILLX/Rii3/0Ymu/9CILr/UC7J/1Auyf9EI7r/Ph2t/zsdpv9NMbL/b1vG/7Co7//c
2f//8e7///Hw///39P///Pn////+//////7///79//7/+//+//r//v/6//7/+v////r////7////
/P////7////////////+/v7//P/9//z/+//8//v//P/9//z+/////P////r////5////+/////z/
///6///99///+fb///by///u6///uLL//29m1P80JKf/Lxer/0Agxf9DIM7/QR3I/0Qhxf9KKcD/
TjC5/1I5s/9ZRLH/aVa3/3pqwf+Jfcn/kofQ/5yO3P+fkOH/oJPf/5qN1/+Ogcv/fG2+/2pZtP9g
SrT/WUC6/0Upsv8/H7T/RybE/0spyv9EI8T/Ph69/zgfr/8/NKj/dnHN/7ew+f/n4v///fX///jx
///79Pn///z7///+/f/+//v//P/7//z/+//8//r//v/6////+v///vr////+/////////////P/7
//z/+//8//v//P/9//z+/v/+/f////v////6////+P////z///n09v/v6fT/+fD///vx///TxP//
lobe/zUoov8zIrP/OSTB/0Enzv9GJtH/RCTJ/0gpwP9PNLn/Y0q8/4Zy0f+xovT/0ML//97V///m
4f//7ez///Lx///v6v//8ez///Tw///28v//9fH//+3n///f1v//0sf//62f7f+Gc9T/aFHF/1U7
vf9CJbb/PiC5/0Yox/9ELMj/Lx+y/y4ipP9NQK7/lofb/9jK///36/////f///72/f///v3//v/7
//z/+//6//v/+//6//3++v///vr///38//////////////////z/+v/8//r//v/9//7+/v/+/P//
//v////6/////P////38/////P//////+fb//+vh///Esf//e1/Q/zQZn/8/Kb7/OSTB/zoiwv87
I7//PiW1/1I9uP+Ec9T/tKnx/97X///p5f//8+7///Xw///18P//9vP///b0///z8v//9fX///T0
///y8v//8vH///f0///69v//+PT///Pw///y7///7un//97Y//+3rPT/fW3L/1A+r/9BLKv/OiOz
/0Ux0P83IsT/Lhaq/0EoqP96Ysj/ybf+//zu///07v///v3///z/+v/8//r/+//6//39/f/9/P7/
//z+///8/v/////////////////+//j//v/6//7+/v/+/f////v////8/////P////7+//z9+f/u
8PD/8/P///Dr//+wo+//Vz+v/zQTpP9FI8T/RSjF/z0luf87JK//UDy3/4V12v/Dtv//5+D///Du
///09P//+fn///n6/v/5+Pz//Pr///38///9/P//+fn///j6+v/8//3//f////79///7+f///vr/
///9///+/v7//Pz8//z8///z8///7ur//+nj///Kvv//iXnX/1E/tP8xHK7/OiLC/0kr0P9CI8D/
MhKf/1g/r/+1pO7/8+v///n5///5/v3/+/78//3+/P/9/P7///z////8/////P////7/////////
/////f71////+//59fr///r////7///59vj///76//3/+f/3/Pr/8vX//+3p//+lmeX/Pyuc/zMX
pv9QLtP/Px3C/0Ejsv9NNav/dGK//76z9//x7f//8vD//+/v+//+/f///v3///77/f/++/3/////
///////9/f3//fz+//z+/v/8//r/+v74//r9+//8/Pz//vv9///7/P/++vn//Pn1//369v///fz/
/Pv///j1///17///9ez//+jc///FuP//e2vQ/0gzsv85Grf/SCTP/1Aq2v8xEK7/QSuh/62h7f/y
8P//7vD7//Lz9//9/f3///3////4////9/////3////+//////////////399/////7///3///75
///69vv/+/v7//7/+P/0+vX/8/f//+zr//+bkOD/Piyd/zshr/9PMs//QyTF/zoesf9YPrD/q5fq
/+jb///48v//+fj///v8+P////v//f33///8+////P3///39//78/P/++/3//v3///77///7+///
9fj8//n9/v/9/f///f3////8///++v////z+///9/v///vv///76//76+f/++v//+vb///jx///7
8///9+7//+PY//+tnvL/XkbE/zQUs/9EIdX/TCva/zghs/8/L57/l4/V/+/s///6+P//8e34///7
////+f////n///35/v///v/////////////+/fn///7+///9///++v///v7+/////P/2/fb/8vj/
/+bl//+eleX/SjSy/y8Rqv9JKsv/QibA/zYhpf9pWMH/0b////Li///78f//+PH///n1+v///fz/
///8///9+f/49vX//Pr6//z8/P/4+f3/+Pf///n3///69f//9vL///b1///09P//9PH///Xz///5
9P//+fX///jz///38vv//Pb7///8/v/79vf//Pf4///8/v///P////v///v1///++v//8er//7yv
+f9vW8z/Nx60/zwiyf9IL9P/LBWn/0Iwof+ml+n/8OX///bt///79f////7///37+//9+/r/////
//////////////39///+///79/z//Pv9/////v/4+vr/9Pf///Lx//+ooOf/QjCh/zUWsf9PLtf/
Oxy9/zoiqv95bM7/zcX//+zh///98f///fP///73/v///P7///3///38///08fr/+vj///b0///0
7///8ev//+ri///j1///18n//9DB///Gu///yb///9HH///d0v//6d3///Ll///16v//9+3///Lp
///99v///vr////+//////z/9vPv//n08f////r//fzy//r5/f/48v//zsT//3Ji0f84JbL/PyXF
/0ksz/82G6v/SjKo/7Cd7v/36///9+////n1+v////7//Pz2/////v////////////38/////v//
/f39//7//f/x8/P/8vL+//Pv///FvP//U0Cv/zgerP9KKM3/RyXJ/zshqv+AbdT/1c////Pw///9
9P////n////3///++v///fv///r8///5+f//7ez///Ds///Z0f//uav5/5WC4/9tVsj/UDS1/0co
s/9KLbj/RCqs/0Mrqf9CKKr/RCip/1I4tP90Ws//oIvu/8Ky///j2P//8+7///Pw///y8fP/+fv1
////9v////j////0////9//6+vT/9fb6//f2///U0P//eW3N/zYgqP9DJcT/SSbK/z0dsv9aQbP/
xrP///Xr///r6Pf///////n79f////7////////////7+v//9/n6//3//P/9//z/7vH2//r2///Y
y///a1W//zcbqv9SMdL/QiHC/zkdrP9/a9X/0sf///Hs///v7vj/+PP8//35///59/3/9/b///Pz
///y8P//5+P//8/G//+CdMz/W0m0/zkkn/82Haf/QiS9/0Umyf9IJM7/SCbR/0Ulyv9LLM//UzHW
/1Iw1P9JKcj/QyS7/0EnsP9FL6b/X0yt/6GU3v/e1P//9/L///f1///19vr//v/9////+//8+fT/
//34//n79f/y9fn/9/b//87H//92Ys3/PiGt/0EfwP9PLc7/OBqj/25Ywv/f0f//+fL///Dw9v//
//z////+////////////+fr///L29//7//n/+f/5//n5///o3///lH7k/zcXpP9LJM3/TSnR/zUZ
qP9oU8D/zMH///Tu///48/////////j59//8//3/+/////f6///o5///ycD//4h33v9AKqv/SS7E
/0QoyP9GK87/TDHU/0kvz/8/J8n/QiXO/0os2f9FJtX/QyLR/z4hy/9AJcn/RCrK/0ktzP9JLcz/
SSzJ/0kswv9AJrD/UTiw/4562f/Owf//9Oz///v5///19P3/+vf////8/////v7/9/T2//Du+v/5
8f//y73//2tUwP9BJLD/RyfC/0Ijuv8+JKb/loPg/+vg///u6v3///////////////////////z9
///5+/v/+f/5/+/09//49v//vbL2/1A2sv9EIMD/SSLS/0Ecvv9bQrr/uav5//Ts///28/////3/
//n49P////v/7/P0//Dz///r6v//qJ/o/1NDr/86I67/RCfK/0Qk1v9CItX/QSTN/0Iqxv8/K7r/
OSew/zomr/89J7X/QSS5/0AjuP8/KLP/Qiu1/0Uwu/9HL8P/RSjL/0Qizf9DIcz/TyzU/0UlwP88
IKn/XUW1/6ma7P/n4f//7+z///v3///38/7/9vX5///+///39vr/8Oz///Po///Esv//XES0/zse
qf9NLsv/PyK3/0kypv+1qPT/+/T///Hu9////v/////////////9+/P////8/+7x9v/s7v//5eT/
/2Zdt/86I63/RibL/0kkzv9BILH/s538/+/h///07v///P3///X49v/4/Pf/9/n5//j3///p4///
j4PV/0EtqP9BKL7/RSrN/0Qq0v9FKdD/RirK/0UpvP9IMrD/XlCw/4J5yv+kmen/tqn5/7il+v+2
pPf/o5bi/4Bzw/9iUbL/UTuy/0kpvv9AHcH/TSrO/z4dvv9OLM3/Ti3L/0QivP9HK6z/fXHD/+nm
///49f///fz///v+///5/f7/+f78//v+///69P//8ub//6OQ3/9SOav/PR+4/0wtzv87I6n/dmXG
//Hp///x7v7//f7///j7+f/////////3//37+v/5+P//7Oj//66p9P9EOKj/OiO7/z4hxP9CI7r/
eF7U/9bE///68f//+vb///v7+//2/Pf/+P75//b6+//59///ycP6/0I0kv86I67/TTLV/0Iqyv8+
J7//NB2n/1dCvP+Qe+j/xbT//+Xb///w6f//7+v///Dp///w5v//9er///Tt///y6v//6OD//87B
//+hi/X/dl3V/0QsqP9GK7D/Sy3C/0gmx/9VLdn/PBuy/0Qylf+/uPH/9/T///z9///6////+P/8
//j/9//7//z//fr///ju///o2v//fGrF/0Qot/9DJ8b/PiS3/0Mxov+5re//9O7///z7///5/Pr/
/////////v/49Pr/+vf//+Te//9nWb//OSKt/0Ekx/8+Ib7/UDqx/7us/f/y6f////r////7///5
+fn/+/78//n+/P/6////8fb//8PC7v9CPIv/RTOu/0Isuv8wH6T/Sjuu/5+W7P/Px///8un///Xs
///x6f//9/T///35///38///+PP///v2///39v//8fL//+7y/f/w9P//7/D//+jn///Hw/f/in3N
/04zq/83Eqj/WS7X/0giuv8/K47/u7Lq//jz///+/v7/+/////n/+v/6//b//f/4///+/v/89v//
+fD//7Sn8f9XQrz/PSO2/0UqwP85IaP/fGrF/+zf///29P//+fv8////////+///9/L///Dr///G
u///OCKg/0gryP9DJMf/RCq4/35vyv/n4f//+fT///j3+///+////vv9//7//f/8//3/4ufm//Hz
/f/w7///m5TR/0Y4lv8sHYb/YViz/8fD///p6P//8fH///j1///29P//9vX///j3+//6+/n/+/z6
//b2/P/8+///+/3///n8///3/vn/+P/3//T/9//x+fj/+Pz//+rn///Esv//cFPG/z8bo/9EJaD/
fGy6/+ri///79v///v7+//3//v/7//v//P/2//7/9v////z///z//+7q///q4f//g3TW/0Itsf9E
KMH/SCu+/0ctov/Arvv/9u////j3///5+/z///f///rx///r4///invP/zMZpf9OL9L/PyO8/087
sv+7s/D/+PX///f2///59vj///z+///9///9+/r////8/////v/89fz/+/L///fs///OxPn/ycH2
/9rZ///t8f//9Pr///L2///09P//+vv///r9///5/v//9Pv2//H48//2+/r/+fr+//n4///5+P//
/P3///3////7/vz/9vr1//L18//09P//9+///+LT///Nuf//28r///Hs///09P///vn////9////
/////f/8//7/+P/+//f////6///+/v/08/3/9fH//7ev9v9URLP/QSW+/0Ylxv83F6T/jXXb//Pp
///6+v//9vf7///4///68P//39T//047ov9CJ73/PiHE/0Eosv9vYcH/5uL///j4///8+/////39
///8/v/++/3/+/n5/////v/+9/T///j5//zy/v//9v//9e////Du///6/f//7vP0//n+/f/7/v//
+vv///Dx+//t8fL/8/n0//j/+v/4//n//f/8//3//v/9/v////7///z7/f/8+fv//fv7///9/P//
/vr/9fPz/+/r9//+9///+e////Dq///8/P//+fz6///8/////f////3///79///+//3///79///+
/f///v7/+/z//+fo/P/m4///c2nD/0grwP8/G8X/SifF/1s/uv/f0v//+vj///b4///++v//+PD/
/7Sm9P83Ipz/SCvI/zshu/9LOK3/pprm//bx///39v////7////8/v/++/3/+/j6///6/////P3/
/fzy////+f///P7/+fb////7///49////f////3//////v//+fX7//fy+////P/////7////9v/7
+/X/+/33//z++P/3+/X/9/j0//n79f////n////8///8/v//+f////n////8///+9/7//vj9//76
///++v/////8//j59f///f////v////6////+v////v////7////+/////z////+///y9P7/9Pf/
/6ag5/9VO8X/QR3I/0kly/85G6L/t6jy//Xw///6+v///Pr5//fx//+EctD/Pyaw/z8ixf9HL8P/
V0es/9XN///28v//9/b6///9///6+Pj/+/n5//r3+f///P///vn7//X47/////j//v/7//f39//4
9/n/+/r8//f2+P/++/3/+fX6///9/////f///ff4//v38v///vb///77//35+P/+//3//P/9////
/P////v////5///++f//+/z///r///70///+9P////j///75+//++vn//v35//7++P////z///7/
///8///++v////r////6////+v////r////7///6+fv/+/7//+Xr9v/Tz///ZEzK/0spzv87GMD/
PCGt/5OC2f/q4///+fn///3/9//y7f//Zk/B/z8iv/9CJc7/Pie5/3xwyv/n4f//9vH////+///5
+PT////6//r79//+/Pz///j////8///+/v7//P/7//v/+f/4/Pb/+/z6//38////+/////r////7
///+/Pz///76//369v///f7///3////2/P//+f7//fv///T0+v/39fv//Pv9//78+//9/ff////4
/////P//+/3///n////4////9v////j////8/v///f3//P37//3++v/8/fn//vz7///9////+///
/PT///jx/v//+f//+/r+//v////1+vv/5+T//4Zw4P9GJ77/RSbH/z8ktP9oVLf/6Nz///Xz///8
+/3/2M/6/1E4uP85GsP/QCbO/0o1wP+Vidv/7Ob///31/////v///v74//3/9//29/P//f78///+
/////f//+vv///v////9//z/+//6//r5+//69///+/X///v1///38/7//v3///r79//8/fn//fr8
//n1+//69Pn///3///Hv9f/9/f//9/X7//79////////9fTw//z98//5+vH///39//74///99P//
+vP///r1///7+P//+vv///v9/f/1+/b/+//5//X38f////z//vz8//j0+f//+///8e34//38///8
//3/9/34//Hv//+ciuj/TDK7/0QqxP9CKLv/VD+s/9LE///x7///9/H//7Om5P8+JK7/OBrH/z0l
x/9SQMH/tarz//Ls////9f////v8////+//7//n/9fn0/////P////j////3//n5+f/5+v7//fz/
//78///9+f//+/X///bv///z7v//9/X///X4///k7Oz/7/r3//j////6////9Pn3//P59P/6/vn/
8vPx/////v/6+vr//Pz8//3//v/v9er//f/5//r9///29v//9fD///Xw///19P//9PX///X4///5
/v//+P///+718v/9//v/+fzz//n68P////v/9vL3//78///+/f//+/z6//n99//69///t6j5/1I9
t/9BKb3/Qiu9/0EqpP+zpPb/7+v///Ll//+TgM//OyCw/0Alz/83I7z/U0W7/8vD///28f////f/
//74+f/7+/v/9/z6//j9+//8//v/+fvv//7++P/4+v//+Pb///Tv///p3///18v//8u99//GuPr/
xrn9/8nB/v/l4v//6u3//+zz///q8P3/9vz///n//v/9//z/9/j0//j59f////v//f/+/+/y9//z
9P7/+Pr//+3v///w7///4dv//8/F///Ivf//yMD8/8/J/v/f3P//7u3//+Xo///y9v//8vX9//L0
9P////j////4//n5+f/5+Pr//v7+//r7+f/9/Pj/+/f//83A//9aR7T/Oyi1/z0nvP8/JKn/lILg
/+3p///t2P//dF+8/zwitf9HMNL/Nye1/1hOuP/b1f//+PT////4////+fz/+ff9//T3/P/2/v7/
8fj1//X17//9/P//6ev//8TC//+LfeP/VkC3/0Aopv9IK7D/SCqz/z4gp/9EK6v/Tzus/4F0yv/N
xP//9e7///vz///z7Pn//ff8///6/P//////+fv1/+7z8v/z8///9fT//+Db//+2rvT/XE+r/087
rP9BJqv/Ox6p/zsho/9BKaf/Tzez/15Jtv+2rPn/29b///Xx///39f//9fby//b67//7//r/+vz8
//7//f///fz///r7//rz///c0P//ZlW2/z8suf86JMD/Qye2/3Zgyv/q5P//6tL//11Fqf87IrL/
RzLO/zkstv9lXcL/5uP///r2////+fr///3+//z5///09v//9fz///H4+//7+f//7ef//5CL1v9S
Sbj/Mxys/0QlyP9UMtf/SSXP/0UhzP9SLtj/RSTM/0Elv/87I6f/RzKf/35rwv/QwP3///X///ry
/f/++fv/+/n4//v8+v/39///8er//7mv9f9hU7H/Oyqd/0YwuP9FKcL/RiXO/0on1f9KKdH/RibL
/0ckzP9IKsP/Pyql/19Or/+2qO//8ur///r5///3/PP/9Pn3//n+/P/8/v7///7////5///88v//
6Nz//3Jjvv9HNMH/PSXF/0cov/9bQrT/5eD//+nT//9POpf/PSaw/0MvyP88L7n/bGbL/+no///7
+v7///r3///9+v/7+///9Pr///H6/f/3/P//9ev//6eW1v9FMKT/RizA/0ko0P9JI9P/RyPO/0gn
0P9JJ9L/RCbT/z4h0v9PMuH/Sy7X/z0gvf87IKb/a1a5/9vQ///z8P///Pv3////+f/y8fX/+vP/
/7yq/f9YQLb/SC68/0Qox/9FKs3/QijQ/0Ek0/9BJNP/QybP/0Mmz/9GJdP/RyfS/0gpzP9JLLj/
VT2p/7qo7f/69P//8vT0//v////3/Pv/+/3+///9////9f////P///Di//97a8L/SjfE/z4ky/9I
J8X/Si+n/+nj///p0///SzaT/0EqtP9AK8T/PS27/3Bnz//o5////v3////8+f//+/j/+vv///b7
/v/t+fP/9/3//97T+f9UPoz/PiWl/0Agv/9JJM7/TyjR/0oowv9DJLX/QSex/0Mruf9BKsL/QCXJ
/zwczv9TMN7/QiO8/z0klv+/tu7/9fb/////+//x9er/9/f9/+vj//+Fb87/OBqh/0Yjx/9HJNL/
RCbN/0Eoxv8+Kbv/Oymy/z0qr/9AK7b/RSjF/0Ylzf9KJ9X/SijI/zsbmP+Ca73/6+D///z6///w
8fX/9fn6//n7/P/++v///fP////z///w5f//fW7C/0ozw/8+Icv/SSfI/0UppP/w6v//7tr//003
lv9HLLj/RSnI/0cuxP90ZNT/6eP///j2///99/z///3///v5///7//7/7/vn//j/9//j3Pf/b12k
/0gwpv9GKrn/SCa6/0knsf9vUMP/s5n3/8y7//+wo+3/cmLA/004sv9AIrv/TSvL/z8frP9POKD/
vbTm//Hz/v/7//z//P/6//H0+f/z7v//pJTi/0Mnnv9CHrj/UCvP/0Mjt/9bRbz/hn3O/8PA/v/F
wP7/iH7L/19Ht/9DJrH/QSK//0QlvP9IKJ//j3TE//Dg////+///9vL3//79///4+vv//v3///74
///88///7+b//4N0yP9DKb3/SSjW/0omxv9KL6f/6uP//+rX//9XQaD/RSq2/0kryv9GK8H/alfL
/+fg///69////vb////7///59/3//f/+//b/7P/6//b///j//9LE+v9SQpn/PCuS/2pTvf/Cp///
8dr///Ti///y6v//9vP//+zn///Nwv//hHDa/0Qtof9NOJ//nIzZ//bx///z9vv/9Pjz//v/+//1
+fr/+Pf//9zS//+Gc8j/TDGm/0ksp/+okfv/2s3//+3t///r8v//7fH//+/s///ezf//qJT1/088
sP9BLp3/eGK7/9rG////9P////f9///7/P/x8vD/+/z6//7+/v/7+v7/+PP//+rj//94aL//QSe6
/0Yoz/9IJL7/Vjuw/+ji///q2P//alWy/0Qnsv9MLcj/Qyq6/1xLuv/i2///+ff////8/////f//
9fL7//f4/P/6//j/8/rz//jz///58v//5+j//9ra///k3f//9ev///nu///47///+/f8//j6+v/y
9vv/8/j//+bn///Z2P//4+D//+7s///5+v//7/Lw//3/9/////j/9vnw/+7w8P/7+v//7+r//9LK
+f/m3///6eX///Lz///v9/7/9f/+//f9///x9P//9u///+nj///m5v//0tT9/+Te////9///+vP6
//bx7v////n//P/1//v/9P/9//f//fz4//nz///m2///aFm0/z4qs/9DKcP/QyKz/3BVw//o4f//
7t3//4Vxyv9BJqz/SSvE/0Mruf9TQ6//1c////r4///9+f////v///j0///19P3//f////3////1
8vv/9/b//+vx+P/w+P//+/z///z4///68/r///v8////+//5/PP/+f/2//P+9v/x/Pn/8vz8//j+
///3+v7/+fj6/////v/6+vT/+Pnw////+f/8/vj/+fz6//v////w8/v/+Pv///r+///y9/j/7fTv
//r//P/7////7vH1//Xz///6+///6PP3//T////7/v//+vn9///9/v////v/+//0//r+8v/7//T/
///3///++f/69P//28v//11Ksf9BLLf/Qim//0Aiq/+Red//7eX///Dl//+ikeL/Qyit/0Qnvf9H
MLv/UECs/8O89f/59v//+Pb///v4///++v//9/b///n6/v/9/////fz+//79///5/v//8PX2//L0
9f/9+/v///3+///6+//+9/r/+/j6//f5+f/3/Pr/+v/+//f++//z9/j//f3////6///89P////3/
//n09f//+/3//vz8//b08//8/fn//f/7//b+9P/z+vP/+f/6//n+/f/5/f7/+/3+//v9/v/9/vz/
9fn0//X99v/z+vX/+Pr6//r5/f/79/3/+/r+//3+/P////z//v35///9/P///f7//vL//8ax//9W
Prz/QyzE/0Eqwv9BI6T/spz1//Ts///y7P//wbP6/1A1tP9AIbj/TTLC/006r/+lnd7/8/D///v7
///59/3//fr///z5///19Pj/+vn7///9/f/7/Pr/9Pn4//b7+v/5+vb//Pn1///8+f///f3///j7
//nz+P/8+///9Pb3//j9/P/7////7/Hy//b0+v//+P////r////8////+P3/+vT5///5/v///v//
///+////+//8//j/+//5//r9+//7/f7///7////+///9/vz//v/2////9v////v/9vn3//79////
/v//+/n///f3/f/3+Pz//v3///78/P//+/3///v///zv//+ojfT/UjXB/0Qryf8/Kb7/Ry2i/8m3
///17///9PP//93U//9iSsD/PR61/00uyf9HL7P/gHXF/+Xk///5+f//9vf7//r5/f///v////38
/////v////7//f78//v+/P/9//z////7////+f////n///z0//359P///Pv///3///39///5+P//
/f3///v6/v///v////r7//jy8///+vv///v+///6////+/////v///r2/P/28vj/+ff9//78///+
/f///v3///z6+v/8+/f////6////9/////r/9/D3//r0///9+///+fj6//z+/v/9////9PX5//79
/////P7///n+///4///35///iGvZ/04uwv9BJ8f/Oye2/19Ksf/dz///8/D///X4///v6v//c13H
/z8gsf9NKc//QCK3/2VWuP/c1///8PH///n9/v/+/v7////+//z89v/6+vT////+//z9+//7//r/
+//5//r89v/8/Pb////6///++f///fj////8//j3+f///f//9fT9//v6///59/3//fv7///8+P//
/vn////+//z3+P///f////r///v0+//89///+/T////6///++////Pv////9/P/9/ff//f71////
9//+/vj///79///7///99P7//vr///j7+f/4//X/+//5//j5/f///f////3///32/f/78v//8d//
/3BRyv9IKMP/PiXD/zklrv96acT/7uX///X0///1+f7/9fL//6GQ5/85HKH/TSXR/0gjzf9UP7r/
tqz4/+3x///1+/r/+vv3//v88/////j/+frx///+/f/8/Pz/+//5//v/9//9/vz//vv9//77/f/+
+/3///38//7//f///////f////39///9/f////7///////////v////6///8/f///f3////+////
/////v////7///36///9+v///v3///7//f/+//j//v/2//7/9//+//r//v3////9////+/z///36
////+//8//f/+f/v//n/8v/7/f7///3///75+v//+f//9ur//8Sw/f9gQcb/SCbG/z8kwf86Jqf/
pprm/+zo///4+///9/z9//Xz///Owv//SC2i/04j0P9EG9D/Si2+/4p83P/u8P//8/r9//3//P//
//f/+fnt//789P///////v7+//v/+f/8//j//f39//38///8+v///Pv///38/v/8//3//P/9//z/
/f/9/////f/////+///+//3//v/6//3/+f///f3//v7+///+/f////7////+//7+/v/+/f///fz/
//79///+//3//v/4//7/9//+//j//v/9//78/////P/////7////+P///vr/+//3//r/8f/7//T/
/v7+//78/////v7/9/L///fq//+OeNf/RiW2/0Qgxv9KLsj/PSqh/8a9/P/29f//+P3///j8/f/0
9P//8un//29at/9EG73/SR3W/z8dwf9bR77/zcv///X7///6/Pz////7//378////Pf//v3///b4
+f/+//v//v/6//z//f/8/v//+/z///v8///8/v//+/////r//f/6//v//P/7//z/+//8//v//P/6
//v/9//7//n//v7+//z+/v/+//3//P/9//z//f/8//3//P/9//z+/v/8/v7//P7+//z//f/8//3/
/P7+//z+///8/P///v3/////+/////r//fn+//r7///8//r//f/5///+///9/P///P37//Px///U
xv//XES6/0Ievv9FH8v/QCG4/2lWxf/l3v//+vr///b5///8/v//9vf///Xw//+rmuP/Phqq/0sh
0v9DH8r/RS+3/5KL1v/w8f//9PH///r3+f////z/+/j0//z7/f/09vf//v7+/////v/9/////f//
//r+///6/v//+v7///v////6//7/+v/9//z/+//8//v//P/6//z/+v/8//r//P/7//z//f/8//3/
/P/7//z/+//8//r//P/6//z/+v/8//v//P/9//z+/v/8/v///f////3////8/v///P7+//7//f//
//v///76//v3///59///+/3+/////v///f////z///X2+v/28///lIbe/0Utsf9OLND/SSfM/zYa
o/+tmvf/8u3///n6///1+Pz///////n5///59v//4dP//1o+tf8+HLf/SinR/z8mvP9eULb/zMT/
//fw///27/7///z///v39v/7/P//+fz///78/////v///f////3////6/v//+v7///n+///7/v//
+/7///3+/////v////7//////////////f////3//v/8//r//P/4//z/+P/8//j//P/4//z/+P/+
//j//v/6//7//f/+/v7///7////+///9/////f/8//z/+P/8//f////6//39/f/8+P//+vj///37
/////f////79///9///39///2NX//19SuP88KLH/SC3K/z0htP9fSLT/2sz///j0///7/f7/+vz9
//7//f/49/n///v///Pp//+Wgd7/OB2i/0gqyf88Ib7/Qiyt/4162//w4f///vL///73/P////v/
+Pv///r9///+/f////3////+///9////+/////r//v/5//7/+/////3////9/v////7///79////
/v////7////+///9/////P/7//z/+v/8//r//P/6//z/+v/8//r//v/7//7//f/+/v7//v3////+
/////v/////+//3//P/8//j//P/4//z/+//8/v7//Pz///38/////P////v////7/v//+P//9O3/
/5CH0P9CM63/PSm+/zgguv8yG5//pJXm/+3j///9+f/////+///////6+vT//Pr6///6///17P//
0cH//2FNuP8+J7f/PCLC/zsfuf9XO7z/vKb1//fo////+f7////7//X4/f/2+f7//f76////+v//
//7//f////v////6//3/+v/7//r/+v/9//v//v/6///+/f///v7///3///79//////////7///38
///+/f///v3//////////////v7+///9////+/////z////9//////////////////////////7/
//z+///9//7/+v/7//r/+v/9//7///3////6////9f//+ev//72s9v9UQLH/OCS5/z8qzf8xHLT/
Wki9/9vP///69P///vz8////+////f7/9ffx/////v/08Pb/9e////Tq//+ajN7/PSim/0gsxv9E
Icn/QyK5/3hcx//byf////b///v5+f/29/v/+Pr7//3/+f/+//j////8//3//v/9//7/+v/7//r/
+P/8//f//v/3//7/+P///vr///38///8/v///f/////////+///9+////fr////9/////f////3/
///9////+v////v////8/////v/////+/////P////7////////+///+/P///f////v+/P/6//X/
+//5///+////9///+ez//+3d//9uWML/Qyq0/zsjxf8/KMr/NCKr/56Q8P/17P////z////7+v//
/vr///z9//j89//5/Pr////+//Lv+P/38v//2s7//3ZhyP85HKf/SSXN/0cjyf89Iqj/i3fW/+7j
///69v//9vP1////+//2+vX/+f78//j9+//2+/n/+/78//3//P/7//f//P/2//3/+f///vr///7+
///9/////f////7+//7//f/+//3///z////7////+v////r////5////+f////r////8/////f3/
/v35////+f////n////6//z79//9+/v///3////8///w7/P//P35/////P/o6O7/9PH//+fe//+L
fNf/RC6v/zkguP9MNND/NB6s/2dUwf/ayv//+e3////7/////v/////+///////7////9ff3//z9
+f/9/vz//Pj///Tt//+1o/D/Vz2y/0IjvP9FI8j/QyW+/0kzsf+XiNr/7OL///31///49ff//f//
//v////7/////P7///7+/v/6+/n/+fj0//v79f////v///79///9/////f///v3///7//f/+//r/
/P/6//7+/v/+/f///v3///78///++////vv///78///+/f////////3+/P/9/Pj//v35///+/f//
//7///79///9/f/08Pb///3///r7+f/v8fL/9fX//+jl//+gkur/PCmi/zYesv9PNc//Lxij/1M/
sP/Bsf7/8+j///7z////+v3///7//////////////fz///n6/v/7/Pj////7//j29f/69///7eP/
/5+P4/83H53/QiW7/0IjxP9AI7n/UTux/56O4v/x5///9vH///r2/P////////3///z0/v/89P7/
//v////9/v///fz////7////+////////v7+//z+/v/6//v/+f/3//n/9v/5//b/+f/2//n/9v/5
//b/+//3//v/+f/7//r/+/39//j5/f/8/P////z///77///8+v///Pv///r6+v/4+ff//f78//3/
/v/w9fT/8/b//+nm//+ekuT/Tzi4/zkbtP9GJcb/Qya5/z4rmv+ekd3/9u////jy///99v///fn/
///+//////////////v3/////f//+/r2////+P/8+fT/9fT4//r1///j2v//fnDO/zciof87Irr/
TC7N/zsgsP9TPbT/oJDk/+7h///88P///fL///zy////+P////v////6///++Pn///38///+/f//
/v3///7+//7+/v/8/v7/+v/9//n/+v/4//f/+f/3//n/9v/5//b/+v/2//r/9v/6//f/+v/6//r/
/v/8/P///Pv///z6///59///+/j///38///////////+//j6+v/z9vv/8/T//+bl//+jmuv/STes
/zIUrf9SMNX/RiPB/zUZmv+QftH/5t7///Px///19fv/+ff9///9/////v/////////////8+P7/
/vv9//v49P///vb////7//37+//18///9PL//9jU//9pYLv/MyGi/z8mvv9JKsv/Ox22/0oytP+Y
g+b/59P///3r////9f//+vL9//v29////vn///76//35+P///P7///z////8///+/f///v3///z9
///8/P//+v3///r+///6//7/+v/9//z/+//8//v//P/9//z+///8/f///vr///v3///69v///vr/
///9/////f//+/r2//X19f/6+///9vT//9nT//+Pg9v/SjWz/zsiuv9GJc3/QiDB/z0fqP9zW7//
3s////z2///z9Pj//f/8//f5+f/9//////////////////////z+//v5+P////v////3///++f//
//7/+fj8//Pz///r7f//y8n//2Vau/8sGp3/PSK//0Ehxv89Hbz/RSiz/4xx2f/Gsfz/8uT///fx
///49vz//v/9/////v/+/Pz///v////7/////f////7+///+/v///v///vv///77/////P///f3/
///+/////v///////////////v////7///r5/f/7+f///fr///36////+v////v////7///79///
8Or//8S7/v+Cc9X/Qy6t/zQatP9HKc7/QiTD/zEXof93YMj/0sD///bq///89f/////+//v99//7
//r/+v75//////////////////3++v/+/vj////5//789P/89/T///z9//76///6+f//8vX///P2
///Dwf3/YFaz/zkjpP9GJ8T/Qx/K/0Uhyf9AH7D/ZUvB/6CP5v/Z0v//8/P//+7x///s7/f/+fz/
//z+///+/v7////6////9/////f////6///8////+/////r////6////+v////z////9/v////v/
///6////+P/+//b////8//z8/P/08fr/9e////zz///67///7N7//5yM5P9mU8j/QCW1/z8gwf9M
K9T/PiC//z8oqP9tXL3/zMH///v0///17v///Pb////9///09PT/+//5//f79f////7/////////
///6+/f////8//v79f/7+PP////8///9/P/89/j///7///v+///v8v//8vP//9vW//9xYsT/MBaY
/0YkxP9II83/QyLD/0Imuf9MN7L/dGjI/7aw9//l5f//8PH//+rt///5+///+v3///3//v/+//r/
///4////+v///P3///v////6////+v////r////8/////f7////7////+P/+//j/+fv1//3////7
+v//9fH///ju///s3f//u6fw/4Bqyf9JM7H/QCW7/0Ulyv9MKdH/QyPC/zkgpv9wYL7/3NT//+3r
///29v//+fj///n2/////f////7///n69v/+//r////+/////////////P7///z+/v/+//3////6
////9/////f///36///+/f/6+f3//fz///X1///08P//4NX//4581/9FKqL/Ox2s/0crxf8+IsH/
PB+8/0Amuf9SPL3/dWXQ/62i8v/Z1P//6uz///H1///4+v//9/n///f3/f/3+Pz/+/r8//35/v/+
+v////v////9/////v////////7//f/7/vz/+P38//n9///19v//8O3//+DW//+0pPj/fWbQ/1c7
t/9IK7f/PiG+/z4hxP9GKMf/QCO0/0oxq/+Vg97/4Nf///Hv///5+///+f7///r9///8/f///vz/
///8/////f7///79//////////////////n9/v/6/v///P7///7//f////f////2////9////fr/
//7///z4/v/69///+fb///rz///u4f//sp/w/2RMuP82HqD/PSO3/0gpyv9IJsv/Px6//z4js/9Q
PLP/ZVe1/5aO1f+0sen/2tX//+vo///u6v//7ej//+/s///08P//9vH///Tv///x7P//7+z//+/s
///v7v//7u7//+7u///i3///uLHu/4R5yf9hUbb/Uju1/0ctt/9AIbr/Ohy7/0Urxf8+J7n/OySo
/2FLu/+xn/L/6t3///bx///2+P//+f/9//n/+//5//7/+v3///78/////P////3+///9/v//////
///////////5/v3/+v/+//z9///+/f////76///++f////f///75///8///89vv///3///v3/f/v
6/b//Pf///br///HuPb/f23G/1Q9r/87Hab/QyG7/1Es0P9MJsz/QSG8/0Imtf9MNLb/VUC6/2RR
xf93Z9P/jH7k/6WX9/+4rP//xLn//8m9///MwP//zcH//8i9//+8r/3/ppnt/46B3f9+cNb/VkS1
/1M/uv9LNb3/Qiu7/zwju/87I7//QCfF/0Quwv81JqD/QTSa/4h90//Wy///7eT///Xv/////P//
+v37//r/+//5//v/+f7///n+///8/f////3////9/f///f3/////////////////+f/6//r//f/8
/f///Pz///79/////fz////6////+v///P3///j7///8/f////7//vr5//f09v/48///+/P//+7h
//+9rfr/fWXJ/0wwqP8/Har/RyO9/0snx/9GJMX/QyHB/0Ahvv9CJL3/Ry3B/1E5x/9UPsb/Tzu8
/0c2r/9UQbX/VUKx/1JAsf9TQLT/Uz64/1E8u/9NNL7/Si7B/0svyP9CJsX/PCC//z0iv/8/KMD/
QSy+/zwptP84KqD/cWq//7249v/o5P//7+v///z4///6+P7/9PPv//3/9//8//r/+f/7//n+///6
/f///P3////+/v///vv///77/////v////////////z/9//8//r//f////39///8+////vz///7+
/v////7///v6///+/f/++fj///z4/////P///v3/9vX3//v3///38f//9e3//+nd///CsfT/g23G
/000pP8/IKX/SCW7/04py/9MKM7/SCbL/0IgxP87Hbz/PB+8/0Alwv9HLsb/Ry3A/0Qru/9DJ7r/
Qya8/0Qlwv9GJcb/RyXK/0glzf89GsL/SSjJ/08xyv9CKbP/NCGa/0c5o/+Bdtb/ubL7/+zq///x
8f//8/H///Tz///5+f///P37//z/9v/8//X//v/4//z//f/8/f///Pz///79///+/v7////6////
+P////7////////////+//b//P/4//3//v/9/v///Pv///z7///8/f////7///v5+P///fz///38
//z3+P/29PT/+fn5//7//f/9/f3/6+nv//f1///9+v//9vH//+3j///Vxv//n4zp/21Uxv8/I6T/
PyGq/0Ajr/9DJ7b/SCy7/0grvv9FKL7/Qya8/0EmvP9DKL7/SCrD/0osxf9IKcT/RiXD/0Iivf9B
Ibb/QyW0/zseo/9CK5//bVm8/6aY6v/RyP//5N7//+vm///28////Pr///v5///49/v/+/r8//3+
+v/7/vX/+/71//7/+v/+//3//v3///78///+/f///v7+//7/+v/+//r////+///////////////5
//3/+f/8//j//P/7//n+/f/5/P//+v3///z8///9/P7//fv7///8/////f///fn///z7///8/v7/
+Pv5//3//v/8/v7/+Pr7//X3///09P//8O7//+zm///n4P//0cn//7Gm7P+Kfcn/bV6y/15Mqf9T
PqT/Ry6c/zwimP9CLKr/Pimo/zskpP88JKD/Qiul/1I7r/9kTrj/cV67/5aF1v+0puj/2sz///Hl
///27f//9+7///vy////9f////j////6////+f7///3///3////v8fH/6+/q////+/////v///79
///9/////P////z///79///6//7/+v/9//3///////////////79+f/8/vj//f/2//v/9v/5/vz/
+Pz9//n7///6/P//+/r8///+///++v//+fX///75///7+f//9fn6//n/+v/0+PP/+Pz2//j/+P/4
/vn/+f7///r9///1+P//7/D///Dx///t6///6uX//+bd///bzv//zb3//8Os//+6pP//ppD//6WS
//+rlv//sZ7//76o///Muv//3s3//+vd///t4v//+e/////4///99v////f+///9/////f////v+
///3/f//+/////z///r2+//19/j/+/////3//v/19vL////7///+/f///f7///z////8///+/f//
+f7///n+///9//////////////8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAA=')
	#endregion
	$MainForm.Name = 'MainForm'
	$MainForm.Text = 'Lowcost System Administrator Tool  v0.5.1.2'
	#
	# SelectAllServers
	#
	$SelectAllServers.Anchor = 'Top, Right'
	$SelectAllServers.CheckAlign = 'MiddleCenter'
	$SelectAllServers.Location = '598, 12'
	$SelectAllServers.Name = 'SelectAllServers'
	$SelectAllServers.RightToLeft = 'Yes'
	$SelectAllServers.Size = '20, 18'
	$SelectAllServers.TabIndex = 31
	$SelectAllServers.TextAlign = 'MiddleCenter'
	$SelectAllServers.UseVisualStyleBackColor = $True
	$SelectAllServers.add_CheckedChanged($SelectAllServers_CheckedChanged)
	#
	# ServerFilter
	#
	$ServerFilter.Anchor = 'Top, Bottom, Right'
	$ServerFilter.Font = 'Microsoft Sans Serif, 8pt'
	$ServerFilter.Location = '619, 10'
	$ServerFilter.Name = 'ServerFilter'
	$ServerFilter.Size = '174, 20'
	$ServerFilter.TabIndex = 27
	$ServerFilter.add_TextChanged($ServerFilter_TextChanged)
	#
	# progress_bar
	#
	$progress_bar.Anchor = 'Bottom, Left, Right'
	$progress_bar.BackColor = 'Menu'
	$progress_bar.Location = '12, 402'
	$progress_bar.Margin = '0, 0, 0, 0'
	$progress_bar.Name = 'progress_bar'
	$progress_bar.Size = '781, 115'
	$progress_bar.TabIndex = 26
	$progress_bar.Text = ''
	$progress_bar.add_TextChanged($progress_bar_TextChanged)
	#
	# tabcontrol1
	#
	$tabcontrol1.Controls.Add($Local_Admin)
	$tabcontrol1.Controls.Add($Copy_Files_tab)
	$tabcontrol1.Controls.Add($IIS_websites)
	$tabcontrol1.Controls.Add($tabpage1)
	$tabcontrol1.Controls.Add($Even_Viewer)
	$tabcontrol1.Controls.Add($PacketCapture)
	$tabcontrol1.Controls.Add($ViewConnections)
	$tabcontrol1.Anchor = 'Top, Bottom, Left, Right'
	$tabcontrol1.Font = 'Microsoft Sans Serif, 6.75pt'
	$tabcontrol1.Location = '12, 11'
	$tabcontrol1.Margin = '0, 0, 0, 0'
	$tabcontrol1.Name = 'tabcontrol1'
	$tabcontrol1.SelectedIndex = 0
	$tabcontrol1.Size = '578, 386'
	$tabcontrol1.TabIndex = 0
	#
	# Local_Admin
	#
	$Local_Admin.Controls.Add($usersdatagridview)
	$Local_Admin.Controls.Add($buttonShowAdmins)
	$Local_Admin.Controls.Add($buttonRemoveAdmin)
	$Local_Admin.Controls.Add($buttonAddAdmin)
	$Local_Admin.Controls.Add($labelUsernameFromATrusted)
	$Local_Admin.Controls.Add($Usernames)
	$Local_Admin.BackColor = 'Transparent'
	$Local_Admin.Location = '4, 21'
	$Local_Admin.Name = 'Local_Admin'
	$Local_Admin.Padding = '3, 3, 3, 3'
	$Local_Admin.Size = '570, 361'
	$Local_Admin.TabIndex = 0
	$Local_Admin.Text = 'Local Admin'
	#
	# usersdatagridview
	#
	$usersdatagridview.AllowUserToAddRows = $False
	$usersdatagridview.AllowUserToDeleteRows = $False
	$usersdatagridview.AllowUserToOrderColumns = $True
	$usersdatagridview.Anchor = 'Top, Bottom, Left, Right'
	$usersdatagridview.AutoSizeColumnsMode = 'AllCells'
	$usersdatagridview.AutoSizeRowsMode = 'AllCells'
	$usersdatagridview.BackgroundColor = 'Control'
	$usersdatagridview.ColumnHeadersHeightSizeMode = 'AutoSize'
	[void]$usersdatagridview.Columns.Add($Column3)
	$usersdatagridview.GridColor = 'Control'
	$usersdatagridview.Location = '0, 69'
	$usersdatagridview.Name = 'usersdatagridview'
	$usersdatagridview.RowHeadersVisible = $False
	$usersdatagridview.Size = '570, 292'
	$usersdatagridview.TabIndex = 27
	$usersdatagridview.Visible = $False
	#
	# buttonShowAdmins
	#
	$buttonShowAdmins.Location = '173, 44'
	$buttonShowAdmins.Name = 'buttonShowAdmins'
	$buttonShowAdmins.Size = '81, 19'
	$buttonShowAdmins.TabIndex = 26
	$buttonShowAdmins.Text = 'Show Admins'
	$buttonShowAdmins.UseVisualStyleBackColor = $True
	$buttonShowAdmins.add_Click($buttonShowAdmins_Click)
	#
	# buttonRemoveAdmin
	#
	$buttonRemoveAdmin.Location = '88, 44'
	$buttonRemoveAdmin.Margin = '1, 1, 1, 1'
	$buttonRemoveAdmin.Name = 'buttonRemoveAdmin'
	$buttonRemoveAdmin.Size = '81, 19'
	$buttonRemoveAdmin.TabIndex = 24
	$buttonRemoveAdmin.Text = 'Remove Admin'
	$buttonRemoveAdmin.UseVisualStyleBackColor = $True
	$buttonRemoveAdmin.add_Click($buttonRemoveAdmin_Click)
	#
	# buttonAddAdmin
	#
	$buttonAddAdmin.Location = '4, 44'
	$buttonAddAdmin.Margin = '1, 1, 1, 1'
	$buttonAddAdmin.Name = 'buttonAddAdmin'
	$buttonAddAdmin.Size = '82, 19'
	$buttonAddAdmin.TabIndex = 23
	$buttonAddAdmin.Text = 'Add Admin'
	$buttonAddAdmin.UseVisualStyleBackColor = $True
	$buttonAddAdmin.add_Click($buttonAddAdmin_Click)
	#
	# labelUsernameFromATrusted
	#
	$labelUsernameFromATrusted.Location = '6, 3'
	$labelUsernameFromATrusted.Name = 'labelUsernameFromATrusted'
	$labelUsernameFromATrusted.Size = '296, 18'
	$labelUsernameFromATrusted.TabIndex = 21
	$labelUsernameFromATrusted.Text = 'Username from a trusted domain.'
	$labelUsernameFromATrusted.TextAlign = 'MiddleLeft'
	#
	# Usernames
	#
	$Usernames.Location = '5, 24'
	$Usernames.Name = 'Usernames'
	$Usernames.Size = '297, 18'
	$Usernames.TabIndex = 20
	#
	# Copy_Files_tab
	#
	$Copy_Files_tab.Controls.Add($CopyFilesProgress)
	$Copy_Files_tab.Controls.Add($Copy_Files)
	$Copy_Files_tab.Controls.Add($labelDestination)
	$Copy_Files_tab.Controls.Add($labelSource)
	$Copy_Files_tab.Controls.Add($Destination)
	$Copy_Files_tab.Controls.Add($Source)
	$Copy_Files_tab.BackColor = 'Transparent'
	$Copy_Files_tab.Location = '4, 21'
	$Copy_Files_tab.Name = 'Copy_Files_tab'
	$Copy_Files_tab.Padding = '3, 3, 3, 3'
	$Copy_Files_tab.Size = '570, 361'
	$Copy_Files_tab.TabIndex = 1
	$Copy_Files_tab.Text = 'Copy Files'
	#
	# CopyFilesProgress
	#
	$CopyFilesProgress.Anchor = 'Top, Bottom, Left, Right'
	$CopyFilesProgress.BackColor = 'Menu'
	$CopyFilesProgress.Location = '3, 83'
	$CopyFilesProgress.Name = 'CopyFilesProgress'
	$CopyFilesProgress.Size = '564, 278'
	$CopyFilesProgress.TabIndex = 32
	$CopyFilesProgress.Text = ''
	#
	# Copy_Files
	#
	$Copy_Files.Anchor = 'Top, Right'
	$Copy_Files.Location = '479, 20'
	$Copy_Files.Name = 'Copy_Files'
	$Copy_Files.Size = '85, 19'
	$Copy_Files.TabIndex = 21
	$Copy_Files.Text = 'Copy Files'
	$Copy_Files.UseVisualStyleBackColor = $True
	$Copy_Files.add_Click($Copy_Files_Click)
	#
	# labelDestination
	#
	$labelDestination.Location = '3, 42'
	$labelDestination.Name = 'labelDestination'
	$labelDestination.Size = '372, 15'
	$labelDestination.TabIndex = 19
	$labelDestination.Text = 'Destination'
	$ToolTip.SetToolTip($labelDestination, "You need to pointto  the destination folder
ex: 
You can use a share
\\567554-server\c$\Folder\")
	#
	# labelSource
	#
	$labelSource.Location = '3, 3'
	$labelSource.Name = 'labelSource'
	$labelSource.Size = '372, 15'
	$labelSource.TabIndex = 18
	$labelSource.Text = 'Source'
	$ToolTip.SetToolTip($labelSource, "You need to put the files in a folder and point the source to that folder
ex: 
c:\Folder\
Alternatively you can use a share
\\567554-server\c$\Folder\")
	#
	# Destination
	#
	$Destination.Location = '3, 59'
	$Destination.Name = 'Destination'
	$Destination.Size = '372, 18'
	$Destination.TabIndex = 17
	$ToolTip.SetToolTip($Destination, "You need to pointto  the destination folder
ex: 
You can use a share
\\567554-server\c$\Folder\
")
	#
	# Source
	#
	$Source.Location = '3, 20'
	$Source.Name = 'Source'
	$Source.Size = '372, 18'
	$Source.TabIndex = 16
	$ToolTip.SetToolTip($Source, "You need to put the files in a folder and point the source to that folder
ex: 
c:\Folder\
Alternatively you can use a share
\\567554-server\c$\Folder\
")
	#
	# IIS_websites
	#
	$IIS_websites.Controls.Add($checkboxIISResetStagger)
	$IIS_websites.Controls.Add($buttonReleaseconfig)
	$IIS_websites.Controls.Add($buttonStopAppPool)
	$IIS_websites.Controls.Add($buttonStartAppPool)
	$IIS_websites.Controls.Add($buttonViewAppPool)
	$IIS_websites.Controls.Add($buttonWebConfig)
	$IIS_websites.Controls.Add($buttonIISRESET)
	$IIS_websites.Controls.Add($buttonHostsFile)
	$IIS_websites.Controls.Add($buttonInLoad)
	$IIS_websites.Controls.Add($buttonOffLoad)
	$IIS_websites.Controls.Add($buttonStopWebsite)
	$IIS_websites.Controls.Add($buttonStartWebsite)
	$IIS_websites.Controls.Add($WebsitesDataGridView)
	$IIS_websites.Controls.Add($buttonViewWebsites)
	$IIS_websites.BackColor = 'Control'
	$IIS_websites.Location = '4, 21'
	$IIS_websites.Name = 'IIS_websites'
	$IIS_websites.Size = '570, 361'
	$IIS_websites.TabIndex = 3
	$IIS_websites.Text = 'IIS websites'
	#
	# checkboxIISResetStagger
	#
	$checkboxIISResetStagger.Anchor = 'Top, Right'
	$checkboxIISResetStagger.Location = '505, 26'
	$checkboxIISResetStagger.Name = 'checkboxIISResetStagger'
	$checkboxIISResetStagger.RightToLeft = 'Yes'
	$checkboxIISResetStagger.Size = '62, 24'
	$checkboxIISResetStagger.TabIndex = 42
	$checkboxIISResetStagger.Text = 'Stagger'
	$checkboxIISResetStagger.UseVisualStyleBackColor = $True
	#
	# buttonReleaseconfig
	#
	$buttonReleaseconfig.Font = 'Microsoft Sans Serif, 6.75pt'
	$buttonReleaseconfig.Location = '428, 29'
	$buttonReleaseconfig.Name = 'buttonReleaseconfig'
	$buttonReleaseconfig.Size = '79, 21'
	$buttonReleaseconfig.TabIndex = 41
	$buttonReleaseconfig.Text = 'Release.config'
	$buttonReleaseconfig.UseVisualStyleBackColor = $True
	$buttonReleaseconfig.add_Click($buttonReleaseconfig_Click)
	#
	# buttonStopAppPool
	#
	$buttonStopAppPool.Font = 'Microsoft Sans Serif, 6.75pt'
	$buttonStopAppPool.Location = '173, 29'
	$buttonStopAppPool.Name = 'buttonStopAppPool'
	$buttonStopAppPool.Size = '79, 21'
	$buttonStopAppPool.TabIndex = 40
	$buttonStopAppPool.Text = 'Stop AppPool'
	$buttonStopAppPool.UseVisualStyleBackColor = $True
	$buttonStopAppPool.add_Click($buttonStopAppPool_Click)
	#
	# buttonStartAppPool
	#
	$buttonStartAppPool.Font = 'Microsoft Sans Serif, 6.75pt'
	$buttonStartAppPool.Location = '88, 29'
	$buttonStartAppPool.Name = 'buttonStartAppPool'
	$buttonStartAppPool.Size = '79, 21'
	$buttonStartAppPool.TabIndex = 39
	$buttonStartAppPool.Text = 'Start AppPool'
	$buttonStartAppPool.UseVisualStyleBackColor = $True
	$buttonStartAppPool.add_Click($buttonStartAppPool_Click)
	#
	# buttonViewAppPool
	#
	$buttonViewAppPool.Font = 'Microsoft Sans Serif, 6.75pt'
	$buttonViewAppPool.Location = '3, 30'
	$buttonViewAppPool.Name = 'buttonViewAppPool'
	$buttonViewAppPool.Size = '79, 21'
	$buttonViewAppPool.TabIndex = 38
	$buttonViewAppPool.Text = 'View AppPool'
	$buttonViewAppPool.UseVisualStyleBackColor = $True
	$buttonViewAppPool.add_Click($buttonViewAppPool_Click)
	#
	# buttonWebConfig
	#
	$buttonWebConfig.Font = 'Microsoft Sans Serif, 6.75pt'
	$buttonWebConfig.Location = '343, 29'
	$buttonWebConfig.Name = 'buttonWebConfig'
	$buttonWebConfig.Size = '79, 21'
	$buttonWebConfig.TabIndex = 37
	$buttonWebConfig.Text = 'Web.Config'
	$buttonWebConfig.UseVisualStyleBackColor = $True
	$buttonWebConfig.add_Click($buttonWebConfig_Click)
	#
	# buttonIISRESET
	#
	$buttonIISRESET.Anchor = 'Top, Right'
	$buttonIISRESET.Font = 'Microsoft Sans Serif, 6.75pt'
	$buttonIISRESET.Location = '505, 3'
	$buttonIISRESET.Name = 'buttonIISRESET'
	$buttonIISRESET.Size = '62, 21'
	$buttonIISRESET.TabIndex = 0
	$buttonIISRESET.Text = 'IIS reset'
	$buttonIISRESET.UseVisualStyleBackColor = $True
	$buttonIISRESET.add_Click($buttonIISRESET_Click)
	#
	# buttonHostsFile
	#
	$buttonHostsFile.Font = 'Microsoft Sans Serif, 6.75pt'
	$buttonHostsFile.Location = '258, 29'
	$buttonHostsFile.Name = 'buttonHostsFile'
	$buttonHostsFile.Size = '79, 21'
	$buttonHostsFile.TabIndex = 37
	$buttonHostsFile.Text = 'Hosts File'
	$buttonHostsFile.UseVisualStyleBackColor = $True
	$buttonHostsFile.add_Click($buttonHostsFile_Click)
	#
	# buttonInLoad
	#
	$buttonInLoad.Font = 'Microsoft Sans Serif, 6.75pt'
	$buttonInLoad.Location = '258, 2'
	$buttonInLoad.Name = 'buttonInLoad'
	$buttonInLoad.Size = '79, 21'
	$buttonInLoad.TabIndex = 36
	$buttonInLoad.Text = 'In Load'
	$buttonInLoad.UseVisualStyleBackColor = $True
	$buttonInLoad.add_Click($buttonInLoad_Click)
	#
	# buttonOffLoad
	#
	$buttonOffLoad.Font = 'Microsoft Sans Serif, 6.75pt'
	$buttonOffLoad.Location = '343, 2'
	$buttonOffLoad.Name = 'buttonOffLoad'
	$buttonOffLoad.Size = '79, 21'
	$buttonOffLoad.TabIndex = 35
	$buttonOffLoad.Text = 'Off Load'
	$buttonOffLoad.UseVisualStyleBackColor = $True
	$buttonOffLoad.add_Click($buttonOffLoad_Click)
	#
	# buttonStopWebsite
	#
	$buttonStopWebsite.Font = 'Microsoft Sans Serif, 6.75pt'
	$buttonStopWebsite.Location = '173, 3'
	$buttonStopWebsite.Name = 'buttonStopWebsite'
	$buttonStopWebsite.Size = '79, 21'
	$buttonStopWebsite.TabIndex = 34
	$buttonStopWebsite.Text = 'Stop Website'
	$buttonStopWebsite.UseVisualStyleBackColor = $True
	$buttonStopWebsite.add_Click($buttonStopWebsite_Click)
	#
	# buttonStartWebsite
	#
	$buttonStartWebsite.Font = 'Microsoft Sans Serif, 6.75pt'
	$buttonStartWebsite.Location = '88, 3'
	$buttonStartWebsite.Name = 'buttonStartWebsite'
	$buttonStartWebsite.Size = '79, 20'
	$buttonStartWebsite.TabIndex = 33
	$buttonStartWebsite.Text = 'Start Website'
	$buttonStartWebsite.UseVisualStyleBackColor = $True
	$buttonStartWebsite.add_Click($buttonStartWebsite_Click)
	#
	# WebsitesDataGridView
	#
	$WebsitesDataGridView.AllowUserToAddRows = $False
	$WebsitesDataGridView.AllowUserToDeleteRows = $False
	$WebsitesDataGridView.AllowUserToOrderColumns = $True
	$WebsitesDataGridView.Anchor = 'Top, Bottom, Left, Right'
	$WebsitesDataGridView.AutoSizeColumnsMode = 'AllCells'
	$WebsitesDataGridView.AutoSizeRowsMode = 'AllCells'
	$WebsitesDataGridView.BackgroundColor = 'Control'
	$WebsitesDataGridView.ColumnHeadersHeightSizeMode = 'AutoSize'
	[void]$WebsitesDataGridView.Columns.Add($Column1)
	$WebsitesDataGridView.EditMode = 'EditOnF2'
	$WebsitesDataGridView.GridColor = 'Control'
	$WebsitesDataGridView.Location = '-2, 63'
	$WebsitesDataGridView.Name = 'WebsitesDataGridView'
	$WebsitesDataGridView.RowHeadersVisible = $False
	$WebsitesDataGridView.Size = '572, 298'
	$WebsitesDataGridView.TabIndex = 32
	$WebsitesDataGridView.Visible = $False
	#
	# buttonViewWebsites
	#
	$buttonViewWebsites.Font = 'Microsoft Sans Serif, 6.75pt'
	$buttonViewWebsites.Location = '3, 3'
	$buttonViewWebsites.Name = 'buttonViewWebsites'
	$buttonViewWebsites.Size = '79, 21'
	$buttonViewWebsites.TabIndex = 0
	$buttonViewWebsites.Text = 'View Websites'
	$buttonViewWebsites.UseVisualStyleBackColor = $True
	$buttonViewWebsites.add_Click($ButtonViewWebsites_Click)
	#
	# tabpage1
	#
	$tabpage1.Controls.Add($buttonApplyFilter)
	$tabpage1.Controls.Add($buttonRestartServices)
	$tabpage1.Controls.Add($buttonStartServices)
	$tabpage1.Controls.Add($buttonStopServices)
	$tabpage1.Controls.Add($ServicesFilterTextBox)
	$tabpage1.Controls.Add($ServicesDataGridView)
	$tabpage1.Controls.Add($buttonViewServices)
	$tabpage1.BackColor = 'Control'
	$tabpage1.Location = '4, 21'
	$tabpage1.Name = 'tabpage1'
	$tabpage1.Size = '570, 361'
	$tabpage1.TabIndex = 5
	$tabpage1.Text = 'Services'
	#
	# buttonApplyFilter
	#
	$buttonApplyFilter.Anchor = 'Top, Right'
	$buttonApplyFilter.Location = '415, 3'
	$buttonApplyFilter.Name = 'buttonApplyFilter'
	$buttonApplyFilter.Size = '49, 21'
	$buttonApplyFilter.TabIndex = 7
	$buttonApplyFilter.Text = 'Filter'
	$buttonApplyFilter.UseVisualStyleBackColor = $True
	$buttonApplyFilter.add_Click($buttonApplyFilter_Click)
	#
	# buttonRestartServices
	#
	$buttonRestartServices.Location = '273, 3'
	$buttonRestartServices.Name = 'buttonRestartServices'
	$buttonRestartServices.Size = '84, 21'
	$buttonRestartServices.TabIndex = 6
	$buttonRestartServices.Text = 'Restart Services'
	$buttonRestartServices.UseVisualStyleBackColor = $True
	$buttonRestartServices.add_Click($buttonRestartServices_Click)
	#
	# buttonStartServices
	#
	$buttonStartServices.Location = '93, 3'
	$buttonStartServices.Name = 'buttonStartServices'
	$buttonStartServices.Size = '84, 21'
	$buttonStartServices.TabIndex = 5
	$buttonStartServices.Text = 'Start Services'
	$buttonStartServices.UseVisualStyleBackColor = $True
	$buttonStartServices.add_Click($buttonStartServices_Click)
	#
	# buttonStopServices
	#
	$buttonStopServices.Location = '183, 3'
	$buttonStopServices.Name = 'buttonStopServices'
	$buttonStopServices.Size = '84, 21'
	$buttonStopServices.TabIndex = 4
	$buttonStopServices.Text = 'Stop Services'
	$buttonStopServices.UseVisualStyleBackColor = $True
	$buttonStopServices.add_Click($buttonStopServices_Click)
	#
	# ServicesFilterTextBox
	#
	$ServicesFilterTextBox.Anchor = 'Top, Right'
	$ServicesFilterTextBox.Location = '470, 4'
	$ServicesFilterTextBox.Name = 'ServicesFilterTextBox'
	$ServicesFilterTextBox.Size = '97, 18'
	$ServicesFilterTextBox.TabIndex = 2
	#
	# ServicesDataGridView
	#
	$ServicesDataGridView.AllowUserToAddRows = $False
	$ServicesDataGridView.AllowUserToDeleteRows = $False
	$ServicesDataGridView.Anchor = 'Top, Bottom, Left, Right'
	$ServicesDataGridView.AutoSizeColumnsMode = 'Fill'
	$ServicesDataGridView.AutoSizeRowsMode = 'AllCells'
	$ServicesDataGridView.BackgroundColor = 'Control'
	$ServicesDataGridView.ColumnHeadersHeightSizeMode = 'AutoSize'
	[void]$ServicesDataGridView.Columns.Add($Column2)
	$ServicesDataGridView.EditMode = 'EditOnF2'
	$ServicesDataGridView.GridColor = 'Control'
	$ServicesDataGridView.Location = '0, 63'
	$ServicesDataGridView.Name = 'ServicesDataGridView'
	$ServicesDataGridView.RowHeadersVisible = $False
	$ServicesDataGridView.Size = '570, 295'
	$ServicesDataGridView.TabIndex = 1
	$ServicesDataGridView.Visible = $False
	#
	# buttonViewServices
	#
	$buttonViewServices.Location = '3, 3'
	$buttonViewServices.Name = 'buttonViewServices'
	$buttonViewServices.Size = '84, 21'
	$buttonViewServices.TabIndex = 0
	$buttonViewServices.Text = 'View Services'
	$buttonViewServices.UseVisualStyleBackColor = $True
	$buttonViewServices.add_Click($buttonViewServices_Click)
	#
	# Even_Viewer
	#
	$Even_Viewer.BackColor = 'Control'
	$Even_Viewer.Location = '4, 21'
	$Even_Viewer.Name = 'Even_Viewer'
	$Even_Viewer.Size = '570, 361'
	$Even_Viewer.TabIndex = 4
	$Even_Viewer.Text = 'Event Viewer'
	#
	# PacketCapture
	#
	$PacketCapture.Controls.Add($datagridviewShowPacketCaptures)
	$PacketCapture.Controls.Add($buttonStopPacketCapture)
	$PacketCapture.Controls.Add($labelCaptureSizeMB)
	$PacketCapture.Controls.Add($buttonStartPacketCapture)
	$PacketCapture.Controls.Add($groupbox1)
	$PacketCapture.Controls.Add($groupbox2)
	$PacketCapture.BackColor = 'Control'
	$PacketCapture.Location = '4, 21'
	$PacketCapture.Name = 'PacketCapture'
	$PacketCapture.Size = '570, 361'
	$PacketCapture.TabIndex = 6
	$PacketCapture.Text = 'Packet Capture'
	#
	# datagridviewShowPacketCaptures
	#
	$datagridviewShowPacketCaptures.AllowUserToDeleteRows = $False
	$datagridviewShowPacketCaptures.AllowUserToOrderColumns = $True
	$datagridviewShowPacketCaptures.Anchor = 'Top, Bottom, Left, Right'
	$datagridviewShowPacketCaptures.AutoSizeColumnsMode = 'AllCells'
	$datagridviewShowPacketCaptures.AutoSizeRowsMode = 'AllCells'
	$datagridviewShowPacketCaptures.BackgroundColor = 'Control'
	$datagridviewShowPacketCaptures.ColumnHeadersHeightSizeMode = 'AutoSize'
	[void]$datagridviewShowPacketCaptures.Columns.Add($ShowPacketCaptureCheckBox)
	$datagridviewShowPacketCaptures.Location = '3, 177'
	$datagridviewShowPacketCaptures.Name = 'datagridviewShowPacketCaptures'
	$datagridviewShowPacketCaptures.ReadOnly = $True
	$datagridviewShowPacketCaptures.RowHeadersVisible = $False
	$datagridviewShowPacketCaptures.Size = '567, 181'
	$datagridviewShowPacketCaptures.TabIndex = 15
	$datagridviewShowPacketCaptures.Visible = $False
	#
	# buttonStopPacketCapture
	#
	$buttonStopPacketCapture.Location = '508, 67'
	$buttonStopPacketCapture.Name = 'buttonStopPacketCapture'
	$buttonStopPacketCapture.Size = '44, 23'
	$buttonStopPacketCapture.TabIndex = 3
	$buttonStopPacketCapture.Text = 'Stop'
	$buttonStopPacketCapture.UseVisualStyleBackColor = $True
	$buttonStopPacketCapture.add_Click($buttonStopPacketCapture_Click)
	#
	# labelCaptureSizeMB
	#
	$labelCaptureSizeMB.Location = '18, 19'
	$labelCaptureSizeMB.Name = 'labelCaptureSizeMB'
	$labelCaptureSizeMB.Size = '104, 23'
	$labelCaptureSizeMB.TabIndex = 2
	$labelCaptureSizeMB.Text = 'Capture Size (MB)'
	#
	# buttonStartPacketCapture
	#
	$buttonStartPacketCapture.Location = '508, 9'
	$buttonStartPacketCapture.Name = 'buttonStartPacketCapture'
	$buttonStartPacketCapture.Size = '44, 23'
	$buttonStartPacketCapture.TabIndex = 0
	$buttonStartPacketCapture.Text = 'Start'
	$buttonStartPacketCapture.UseVisualStyleBackColor = $True
	$buttonStartPacketCapture.add_Click($buttonStartPacketCapture_Click)
	#
	# groupbox1
	#
	$groupbox1.Controls.Add($checkboxTraceConvertToPcap)
	$groupbox1.Controls.Add($buttonShowPacketCapture)
	$groupbox1.Controls.Add($buttonGetPacketCapture)
	$groupbox1.Controls.Add($TextboxCaptureFolder)
	$groupbox1.Controls.Add($labelLocalFolder)
	$groupbox1.Location = '3, 101'
	$groupbox1.Name = 'groupbox1'
	$groupbox1.RightToLeft = 'No'
	$groupbox1.Size = '564, 70'
	$groupbox1.TabIndex = 13
	$groupbox1.TabStop = $False
	#
	# checkboxTraceConvertToPcap
	#
	$checkboxTraceConvertToPcap.Location = '15, 39'
	$checkboxTraceConvertToPcap.Name = 'checkboxTraceConvertToPcap'
	$checkboxTraceConvertToPcap.RightToLeft = 'Yes'
	$checkboxTraceConvertToPcap.Size = '124, 24'
	$checkboxTraceConvertToPcap.TabIndex = 8
	$checkboxTraceConvertToPcap.Text = 'Convert to pcap'
	$checkboxTraceConvertToPcap.TextAlign = 'MiddleRight'
	$checkboxTraceConvertToPcap.UseVisualStyleBackColor = $True
	$checkboxTraceConvertToPcap.add_CheckedChanged($checkboxTraceConvertToPcap_CheckedChanged)
	#
	# buttonShowPacketCapture
	#
	$buttonShowPacketCapture.Anchor = 'Top, Right'
	$buttonShowPacketCapture.Location = '505, 15'
	$buttonShowPacketCapture.Name = 'buttonShowPacketCapture'
	$buttonShowPacketCapture.Size = '44, 23'
	$buttonShowPacketCapture.TabIndex = 10
	$buttonShowPacketCapture.Text = 'Show'
	$buttonShowPacketCapture.UseVisualStyleBackColor = $True
	$buttonShowPacketCapture.add_Click($buttonShowPacketCapture_Click)
	#
	# buttonGetPacketCapture
	#
	$buttonGetPacketCapture.Location = '505, 39'
	$buttonGetPacketCapture.Name = 'buttonGetPacketCapture'
	$buttonGetPacketCapture.Size = '44, 23'
	$buttonGetPacketCapture.TabIndex = 9
	$buttonGetPacketCapture.Text = 'Get'
	$buttonGetPacketCapture.UseVisualStyleBackColor = $True
	#
	# TextboxCaptureFolder
	#
	$TextboxCaptureFolder.Location = '125, 17'
	$TextboxCaptureFolder.Name = 'TextboxCaptureFolder'
	$TextboxCaptureFolder.Size = '363, 18'
	$TextboxCaptureFolder.TabIndex = 7
	#
	# labelLocalFolder
	#
	$labelLocalFolder.Location = '15, 20'
	$labelLocalFolder.Name = 'labelLocalFolder'
	$labelLocalFolder.Size = '85, 23'
	$labelLocalFolder.TabIndex = 6
	$labelLocalFolder.Text = 'Local Folder'
	#
	# groupbox2
	#
	$groupbox2.Controls.Add($buttonShowStatusPacketCapture)
	$groupbox2.Controls.Add($labelCaptureFilter)
	$groupbox2.Controls.Add($labelNetworkAdapter)
	$groupbox2.Controls.Add($textboxFilterPacketCapture1)
	$groupbox2.Controls.Add($textboxNetworkAdapterPacketCapture)
	$groupbox2.Controls.Add($TextboxCaptureSize)
	$groupbox2.Location = '3, 0'
	$groupbox2.Name = 'groupbox2'
	$groupbox2.Size = '564, 95'
	$groupbox2.TabIndex = 14
	$groupbox2.TabStop = $False
	#
	# buttonShowStatusPacketCapture
	#
	$buttonShowStatusPacketCapture.Anchor = 'Top, Right'
	$buttonShowStatusPacketCapture.Location = '505, 38'
	$buttonShowStatusPacketCapture.Name = 'buttonShowStatusPacketCapture'
	$buttonShowStatusPacketCapture.Size = '44, 23'
	$buttonShowStatusPacketCapture.TabIndex = 16
	$buttonShowStatusPacketCapture.Text = 'Status'
	$buttonShowStatusPacketCapture.UseVisualStyleBackColor = $True
	$buttonShowStatusPacketCapture.add_Click($buttonShowStatusPacketCapture_Click)
	#
	# labelCaptureFilter
	#
	$labelCaptureFilter.Location = '15, 46'
	$labelCaptureFilter.Name = 'labelCaptureFilter'
	$labelCaptureFilter.Size = '104, 23'
	$labelCaptureFilter.TabIndex = 12
	$labelCaptureFilter.Text = 'Capture filter'
	#
	# labelNetworkAdapter
	#
	$labelNetworkAdapter.Location = '15, 72'
	$labelNetworkAdapter.Name = 'labelNetworkAdapter'
	$labelNetworkAdapter.Size = '104, 23'
	$labelNetworkAdapter.TabIndex = 16
	$labelNetworkAdapter.Text = 'Network Adapter'
	#
	# textboxFilterPacketCapture1
	#
	$textboxFilterPacketCapture1.Location = '125, 43'
	$textboxFilterPacketCapture1.Name = 'textboxFilterPacketCapture1'
	$textboxFilterPacketCapture1.Size = '363, 18'
	$textboxFilterPacketCapture1.TabIndex = 11
	#
	# textboxNetworkAdapterPacketCapture
	#
	$textboxNetworkAdapterPacketCapture.Location = '125, 67'
	$textboxNetworkAdapterPacketCapture.Name = 'textboxNetworkAdapterPacketCapture'
	$textboxNetworkAdapterPacketCapture.Size = '363, 18'
	$textboxNetworkAdapterPacketCapture.TabIndex = 15
	$textboxNetworkAdapterPacketCapture.Text = 'Public'
	#
	# TextboxCaptureSize
	#
	$TextboxCaptureSize.Location = '125, 19'
	$TextboxCaptureSize.Name = 'TextboxCaptureSize'
	$TextboxCaptureSize.Size = '37, 18'
	$TextboxCaptureSize.TabIndex = 1
	$TextboxCaptureSize.Text = '50'
	#
	# ViewConnections
	#
	$ViewConnections.BackColor = 'Control'
	$ViewConnections.Location = '4, 21'
	$ViewConnections.Name = 'ViewConnections'
	$ViewConnections.Size = '570, 361'
	$ViewConnections.TabIndex = 7
	$ViewConnections.Text = 'View Connections'
	#
	# ServerList
	#
	$ServerList.Anchor = 'Top, Bottom, Right'
	$ServerList.CausesValidation = $False
	$ServerList.CheckOnClick = $True
	$ServerList.Font = 'Microsoft Sans Serif, 8pt'
	$ServerList.FormattingEnabled = $True
	$ServerList.Location = '598, 32'
	$ServerList.Name = 'ServerList'
	$ServerList.Size = '195, 364'
	$ServerList.Sorted = $True
	$ServerList.TabIndex = 22
	$ServerList.ThreeDCheckBoxes = $True
	#
	# ToolTip
	#
	$ToolTip.AutomaticDelay = 0
	$ToolTip.AutoPopDelay = 2500
	$ToolTip.InitialDelay = 500
	$ToolTip.IsBalloon = $True
	$ToolTip.ReshowDelay = 0
	$ToolTip.ShowAlways = $True
	$ToolTip.ToolTipIcon = 'Info'
	$ToolTip.ToolTipTitle = 'Examples'
	#
	# Column1
	#
	$Column1.HeaderText = '#'
	$Column1.Name = 'Column1'
	$Column1.Width = 16
	#
	# Column2
	#
	$Column2.AutoSizeMode = 'None'
	$Column2.DataPropertyName = 'CheckedValues'
	$Column2.HeaderText = '#'
	$Column2.Name = 'Column2'
	$Column2.Width = 30
	#
	# Column3
	#
	$Column3.HeaderText = '#'
	$Column3.Name = 'Column3'
	$Column3.Width = 16
	#
	# ShowPacketCaptureCheckBox
	#
	$ShowPacketCaptureCheckBox.HeaderText = '#'
	$ShowPacketCaptureCheckBox.Name = 'ShowPacketCaptureCheckBox'
	$ShowPacketCaptureCheckBox.ReadOnly = $True
	$ShowPacketCaptureCheckBox.Width = 21
	$groupbox2.ResumeLayout()
	$groupbox1.ResumeLayout()
	$PacketCapture.ResumeLayout()
	$tabpage1.ResumeLayout()
	$IIS_websites.ResumeLayout()
	$Copy_Files_tab.ResumeLayout()
	$Local_Admin.ResumeLayout()
	$tabcontrol1.ResumeLayout()
	$MainForm.ResumeLayout()
	#endregion Generated Form Code

	#----------------------------------------------

	#Save the initial state of the form
	$InitialFormWindowState = $MainForm.WindowState
	#Init the OnLoad event to correct the initial state of the form
	$MainForm.add_Load($Form_StateCorrection_Load)
	#Clean up the control events
	$MainForm.add_FormClosed($Form_Cleanup_FormClosed)
	#Show the Form
	return $MainForm.ShowDialog()

} #End Function

#Call the form
Call-LCTG_tool2_psf | Out-Null
